{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\groupchart\\ChartGroupList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\groupchart\\ChartGroupList.vue","mtime":1588673568182},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getAction, postAction } from \"@/api/manage\";\r\nimport ProductNewBigImg from \"../product/modules/ProductNewBigImg\";\r\nimport ChatGroupMemberModal from \"./modules/ChatGroupMemberModal\";\r\nimport { JeecgListMixin } from \"@/mixins/JeecgListMixin\";\r\nimport { filterObj } from \"@/utils/util\";\r\nimport JEllipsis from \"@/components/jeecg/JEllipsis\";\r\n\r\nexport default {\r\n  name: \"ChartGroupList\",\r\n  mixins: [JeecgListMixin],\r\n  components: {\r\n    JEllipsis,\r\n    ProductNewBigImg,\r\n    ChatGroupMemberModal\r\n  },\r\n  data() {\r\n    return {\r\n      description: \"群组管理页面\",\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: \"群组名称\",\r\n          align: \"center\",\r\n          dataIndex: \"name\"\r\n        },\r\n        {\r\n          title: \"群头像\",\r\n          align: \"center\",\r\n          dataIndex: \"icon\",\r\n          scopedSlots: { customRender: \"icon\" }\r\n        },\r\n        {\r\n          title: \"群组描述\",\r\n          align: \"center\",\r\n          dataIndex: \"descr\",\r\n          scopedSlots: { customRender: \"templateContent\" }\r\n        },\r\n        {\r\n          title: \"群组类型\",\r\n          align: \"center\",\r\n          dataIndex: \"publicGroup\",\r\n          customRender: function(text) {\r\n            if (text === 0) {\r\n              return \"私有群\";\r\n            } else if (text === 1) {\r\n              return \"公开群\";\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"加入群组需要审批\",\r\n          align: \"center\",\r\n          dataIndex: \"membersonly\",\r\n          customRender: function(text) {\r\n            if (text === 0) {\r\n              return \"不需要\";\r\n            } else if (text === 1) {\r\n              return \"需要\";\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"允许群成员邀请别人加入\",\r\n          align: \"center\",\r\n          dataIndex: \"allowinvites\",\r\n          customRender: function(text) {\r\n            if (text === 0) {\r\n              return \"不允许\";\r\n            } else if (text === 1) {\r\n              return \"允许\";\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"群最大成员数\",\r\n          align: \"center\",\r\n          dataIndex: \"maxusers\"\r\n        },\r\n        {\r\n          title: \"现有成员总数\",\r\n          align: \"center\",\r\n          dataIndex: \"affiliationsCount\"\r\n        },\r\n        {\r\n          title: \"邀请加群，被邀请人需要确认\",\r\n          align: \"center\",\r\n          dataIndex: \"inviteNeedConfirm\",\r\n          customRender: function(text) {\r\n            if (text === 0) {\r\n              return \"不需要\";\r\n            } else if (text === 1) {\r\n              return \"需要\";\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"管理员id\",\r\n          align: \"center\",\r\n          dataIndex: \"ownerId\"\r\n        },\r\n        {\r\n          title: \"二维码\",\r\n          align: \"center\",\r\n          dataIndex: \"qrCode\",\r\n          scopedSlots: { customRender: \"yqcode\" }\r\n        },\r\n        {\r\n          title: \"全体禁言\",\r\n          align: \"center\",\r\n          dataIndex: \"bannedPost\",\r\n          customRender: function(text) {\r\n            if (text === 0) {\r\n              return \"否\";\r\n            } else if (text === 1) {\r\n              return \"是\";\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"阅后即焚\",\r\n          align: \"center\",\r\n          dataIndex: \"burnRead\",\r\n          customRender: function(text) {\r\n            if (text === 0) {\r\n              return \"否\";\r\n            } else if (text === 1) {\r\n              return \"是\";\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"公告\",\r\n          align: \"center\",\r\n          dataIndex: \"notice\",\r\n          scopedSlots: { customRender: \"templateContent\" }\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"state\",\r\n          align: \"center\",\r\n          // width: 200,\r\n          scopedSlots: { customRender: \"action\" }\r\n        }\r\n      ],\r\n      url: {\r\n        list: \"/system/chatgroup/findPageList\",\r\n        freeze: \"/system/chatgroup/forbidden/json\",\r\n        thaw: \"/system/chatgroup/thaw/json\"\r\n      }\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    getQueryParams() {\r\n      //获取查询条件\r\n      let sqp = {};\r\n      if (this.superQueryParams) {\r\n        sqp[\"superQueryParams\"] = encodeURI(this.superQueryParams);\r\n      }\r\n      var param = Object.assign(\r\n        sqp,\r\n        this.queryParam,\r\n        this.isorter,\r\n        this.filters\r\n      );\r\n      param.field = this.getQueryField();\r\n      param.pageNo = this.ipagination.current;\r\n      param.pageSize = this.ipagination.pageSize;\r\n      param.groupName = param.groupName ? param.groupName : \"\";\r\n\r\n      param.groupType =\r\n        param.groupType === 0 || param.groupType === 1 ? param.groupType : \"\";\r\n\r\n      return filterObj(param);\r\n    },\r\n\r\n    //  打开成员列表页\r\n    handleMembers(record) {\r\n      this.$refs.modalForm.open(record);\r\n    },\r\n    handleFreeze(id) {\r\n      let arr = `?groupId=${id}`;\r\n      let that = this;\r\n      postAction(this.url.freeze + arr).then(res => {\r\n        if (res.success) {\r\n          that.$message.success(res.message);\r\n          that.loadData();\r\n        } else {\r\n          that.$message.warning(res.message);\r\n          that.loadData();\r\n        }\r\n      });\r\n    },\r\n    handleThaw(id) {\r\n      let arr1 = `?groupId=${id}`;\r\n      let that = this;\r\n      postAction(this.url.thaw + arr1).then(res => {\r\n        if (res.success) {\r\n          that.$message.success(res.message);\r\n          that.loadData();\r\n        } else {\r\n          that.$message.warning(res.message);\r\n          that.loadData();\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}