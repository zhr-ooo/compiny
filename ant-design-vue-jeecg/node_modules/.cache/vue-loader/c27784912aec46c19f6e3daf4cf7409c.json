{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductAddAlbumModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductAddAlbumModal.vue","mtime":1588673568243},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport { httpAction } from '@/api/manage'\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\"\nimport * as qiniu from 'qiniu-js'\nexport default {\n  name: \"ProductAddAlbumModal\",\n  data () {\n    return {\n      title: '新增专辑',\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      headers: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 },\n      },\n      model: {},\n      coverimg: '',\n      canimg: '',\n      percent: '',\n      loading: false,\n      url: {\n        add: '/user/album/add',\n        fileUpload: window._CONFIG['domianQiNiu'],\n        qiniuToken: '/qiniuUpToken'\n      }\n    }\n  },\n  created () {\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\":token};\n  },\n  methods: {\n    add () {\n      this.form.resetFields()\n      this.confirmLoading = false\n    },\n    handleOK () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let formData = Object.assign(this.model, values);\n          formData.albumimg = this.coverimg;\n          //时间格式化\n\n          console.log(formData)\n          httpAction(this.url.add,formData,'POST').then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.handleCancel();\n          })\n        }\n      })\n    },\n    handleCancel () {\n      this.$emit('close')\n      this.visible = false\n    },\n    // 自定义上传\n    customRequest (data) {\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, '')\n      //请求token\n      httpAction(this.url.qiniuToken, {}, 'post').then((res) => {\n        if (res) {\n          let token = res.data.token\n          const file = data.file\n          const key = new Date().getTime() + suffix;\n          let domain = this.url.fileUpload\n          let config = {\n            useCdnDomain: true,\n            region: null\n          }\n          let putExtra = {\n            fname: '',\n            params: {},\n            mimeType: null\n          }\n          let observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: (res) => {\n              this.loading = true;\n              this.percent = res.total.percent.toFixed(2)\n              this.coverimg = '';\n            },\n            error: () => {\n              this.$message.error('上传失败')\n              this.loading = false;\n              this.coverimg = ''\n            },\n            complete: (response) => {\n              this.coverimg = `${domain}/${response.key}`;\n              this.loading = false;\n            }\n          })\n        }\n      })\n    },\n  }\n}\n",{"version":3,"sources":["ProductAddAlbumModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ProductAddAlbumModal.vue","sourceRoot":"src/views/product/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirm-loading=\"confirmLoading\"\r\n    @ok=\"handleOK\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"专辑名称\"\r\n        >\r\n          <a-input placeholder=\"请输入专辑名称\" v-decorator=\"['albumname', {rules: [{required: true, message: '请输入专辑名称'}]}]\"></a-input>\r\n        </a-form-item>\r\n      </a-form>\r\n      <a-form :form=\"form\">\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"专辑封面\"\r\n        >\r\n          <a-upload\r\n            listType=\"picture-card\"\r\n            class=\"avatar-uploader\"\r\n            :showUploadList=\"false\"\r\n            :supportServerRender=\"true\"\r\n            :customRequest=\"customRequest\"\r\n            v-decorator=\"['albumimg', {}]\"\r\n          >\r\n            <img v-if=\"coverimg\" :src=\"coverimg\" alt=\"avatar\" style=\"max-width: 150px;\" />\r\n            <div v-else>\r\n              <a-icon :type=\"loading ? 'loading' : 'plus'\" />\r\n              <div class=\"ant-upload-text\" v-if=\"!loading\">Upload</div>\r\n              <div class=\"ant-upload-text\" v-if=\"loading\">{{ percent }}%</div>\r\n            </div>\r\n          </a-upload>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import Vue from 'vue'\r\n  import { httpAction } from '@/api/manage'\r\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\r\n  import * as qiniu from 'qiniu-js'\r\n  export default {\r\n    name: \"ProductAddAlbumModal\",\r\n    data () {\r\n      return {\r\n        title: '新增专辑',\r\n        visible: false,\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        headers: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 17 },\r\n        },\r\n        model: {},\r\n        coverimg: '',\r\n        canimg: '',\r\n        percent: '',\r\n        loading: false,\r\n        url: {\r\n          add: '/user/album/add',\r\n          fileUpload: window._CONFIG['domianQiNiu'],\r\n          qiniuToken: '/qiniuUpToken'\r\n        }\r\n      }\r\n    },\r\n    created () {\r\n      const token = Vue.ls.get(ACCESS_TOKEN);\r\n      this.headers = {\"X-Access-Token\":token};\r\n    },\r\n    methods: {\r\n      add () {\r\n        this.form.resetFields()\r\n        this.confirmLoading = false\r\n      },\r\n      handleOK () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let formData = Object.assign(this.model, values);\r\n            formData.albumimg = this.coverimg;\r\n            //时间格式化\r\n\r\n            console.log(formData)\r\n            httpAction(this.url.add,formData,'POST').then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.handleCancel();\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      // 自定义上传\r\n      customRequest (data) {\r\n        const suffix = \".\" + data.file.name.replace(/^.+\\./, '')\r\n        //请求token\r\n        httpAction(this.url.qiniuToken, {}, 'post').then((res) => {\r\n          if (res) {\r\n            let token = res.data.token\r\n            const file = data.file\r\n            const key = new Date().getTime() + suffix;\r\n            let domain = this.url.fileUpload\r\n            let config = {\r\n              useCdnDomain: true,\r\n              region: null\r\n            }\r\n            let putExtra = {\r\n              fname: '',\r\n              params: {},\r\n              mimeType: null\r\n            }\r\n            let observable = qiniu.upload(file, key, token, putExtra, config);\r\n            observable.subscribe({\r\n              next: (res) => {\r\n                this.loading = true;\r\n                this.percent = res.total.percent.toFixed(2)\r\n                this.coverimg = '';\r\n              },\r\n              error: () => {\r\n                this.$message.error('上传失败')\r\n                this.loading = false;\r\n                this.coverimg = ''\r\n              },\r\n              complete: (response) => {\r\n                this.coverimg = `${domain}/${response.key}`;\r\n                this.loading = false;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}