{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductNewAddModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductNewAddModal.vue","mtime":1595325889711},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from \"vue\";\r\nimport { filterObj, formatDate } from \"@/utils/util\";\r\nimport { httpAction, getAction } from \"@/api/manage\";\r\nimport moment from \"moment\";\r\nimport pick from \"lodash.pick\";\r\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\r\nimport ProductAddAlbumModal from \"./ProductAddAlbumModal\";\r\nimport JCodeEditor from \"@/components/jeecg/JCodeEditor\";\r\nimport JEditor from \"@/components/jeecg/JEditor\";\r\nimport AssociatedModal from \"../../system/modules/AssociatedModal\";\r\nimport ProductVipAddImg from \"./ProductVipAddImg\"; // 添加视频\r\nimport * as qiniu from \"qiniu-js\";\r\n\r\nexport default {\r\n  name: \"ProductNewAddModal\",\r\n  data() {\r\n    return {\r\n      title: \"操作\",\r\n      visible: false,\r\n      model: {},\r\n      userId: \"\",\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 5 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 17 }\r\n      },\r\n      labelColk: {\r\n        xs: { span: 24 },\r\n        sm: { span: 2 }\r\n      },\r\n      wrapperColk: {\r\n        xs: { span: 24 },\r\n        sm: { span: 21 }\r\n      },\r\n      loading: false,\r\n      autodispaly: false,\r\n      confirmLoading: false,\r\n      form: this.$form.createForm(this),\r\n      coverimg: \"\", // 课程封面\r\n      canimg: \"\", // 课程封面副\r\n      percent: \"\", // 图片上传进度\r\n      filePercent: \"\", // 文件资源上传进度\r\n      contentList: [],\r\n      selecBox:[],\r\n      selectrue:false,\r\n      thisIndex: 0,\r\n      thisType: \"\",\r\n      disableSubmit: false,\r\n      albumList: [], // 专辑列表\r\n      content: \"\", // 详情\r\n      headers: {}, // 文件上传的请求头\r\n      selectList: [], // 课程分类列表\r\n      albumName: \"\", //专辑名称\r\n      albumNum: \"\", //专辑id\r\n      author: \"\", // 作者id\r\n      authorName: \"\", //作者名称\r\n      cateName: \"\", // 分类名称\r\n      record: {}, // 老数据的资源详情\r\n      type: 0, // 课程类型\r\n      fatherId:null,\r\n      validatorRules: {},\r\n      url: {\r\n        add: \"/product/productNew/addProduct\", // 课程新增接口\r\n        edit: \"/product/productNew/editProduct\", // 课程编辑接口\r\n        getbyId: \"/product/productNew/queryById\", // 根据课程id获取课程详情\r\n        findList: \"/product/productsource/findListByProductId\", // 课程资源详情\r\n        selectNewList: \"/product/productCategory/queryFirstSelect\", //分类选择\r\n        querySecondSelect:\"/product/productCategory/querySecondSelect\",\r\n        albumlist: \"/user/album/findAlbumSelectByUserId\", // 专辑\r\n        // fileUpload: window._CONFIG['domianURL']+\"/fileupload\",  //图片上传\r\n        userList: \"/sys/user/getUserList\", //作者列表\r\n        fileUpload: window._CONFIG[\"domianQiNiu\"], // 七牛云地址\r\n        qiniuToken: \"/qiniuUpToken\" // 请求七牛云上传的token\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    const token = Vue.ls.get(ACCESS_TOKEN);\r\n    this.headers = { \"X-Access-Token\": token };\r\n    // 获取课程分类\r\n    getAction(this.url.selectNewList).then(res => {\r\n      console.log(res)\r\n      if (res.success) {\r\n        this.selectList = res.result;\r\n      } else {\r\n        this.$message.warning(res.message);\r\n      }\r\n    });\r\n  },\r\n\r\n  components: {\r\n    JCodeEditor,\r\n    JEditor,\r\n    ProductAddAlbumModal,\r\n    ProductVipAddImg, // 添加图片\r\n    AssociatedModal // 选择作者弹框\r\n  },\r\n\r\n  computed: {\r\n    uploadAction: function() {\r\n      return this.url.fileUpload;\r\n    }\r\n  },\r\n  methods: {\r\n    add() {\r\n      this.coverimg = \"\";\r\n      this.content = \"\";\r\n      // this.selectrue = false;\r\n      this.confirmLoading = false;\r\n      this.albumList = [];\r\n      this.author = \"\";\r\n      this.percent = \"\";\r\n      this.edit({});\r\n    },\r\n    edit(record) {\r\n      this.type = 0;\r\n      this.coverimg = record.coverimg;\r\n      this.canimg = record.coverimg;\r\n      this.contentList = [];\r\n      this.form.resetFields();\r\n      this.visible = true;\r\n      if (record.id) {\r\n        this.autodispaly = true;\r\n        this.userId = record.id;\r\n        this.getNewModel(record.id);\r\n        this.getContentModel(record.id);\r\n      } else {\r\n        this.autodispaly = false;\r\n        this.model = Object.assign({}, record);\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(\r\n            pick(\r\n              this.model,\r\n              \"title\",\r\n              \"introduction\",\r\n              \"price\",\r\n              \"type\",\r\n              \"fistcategory\",\r\n              \"secondcategory\",\r\n              \"content\",\r\n              \"coverimg\",\r\n              \"album\",\r\n              \"createTime\",\r\n              \"clickcount\"\r\n            )\r\n          );\r\n        });\r\n      }\r\n    },\r\n    changeIndex(index, type) {\r\n      this.thisIndex = index;\r\n      this.thisType = type;\r\n      console.log(this.thisIndex);\r\n      if (type === \"video\") {\r\n        this.$refs.addImgModal.show();\r\n      }\r\n    },\r\n    // 点击添加数据\r\n    addFile(type, index) {\r\n      console.log(\"index\" + index);\r\n      const dataCon = {\r\n        type: type,\r\n        timeurl: \"\",\r\n        title: \"\",\r\n        url: \"\"\r\n      };\r\n      if (!index) {\r\n        this.contentList.splice(0, 0, dataCon);\r\n      } else {\r\n        this.contentList.splice(index, 0, dataCon);\r\n      }\r\n      this.$forceUpdate();\r\n    },\r\n    // 删除数据\r\n    delHandle(index) {\r\n      if (!index) {\r\n        this.contentList.splice(0, 1);\r\n      } else {\r\n        this.contentList.splice(index, 1);\r\n      }\r\n      this.$forceUpdate();\r\n    },\r\n    //选择作者\r\n    chooseAuthor() {\r\n      if (!this.disableSubmit) {\r\n        this.$refs.assModalForm.show();\r\n      }\r\n    },\r\n    //接收选择的作者数据\r\n    assFormOk(value) {\r\n      console.log(value);\r\n      this.authorName = value.authorName;\r\n      this.author = value.author;\r\n      // 根据选择的作者获取专辑\r\n      this.getAblum(this.author);\r\n    },\r\n    // 专辑选择下拉菜单 展开\r\n    dropSelect() {\r\n      if (!this.author || this.author === \"\") {\r\n        this.$message.warning(\"请先选择课程作者!\");\r\n      }\r\n    },\r\n    //获取课程专辑\r\n    getAblum(userId) {\r\n      httpAction(this.url.albumlist + \"?userId=\" + userId, {}, \"POST\").then(\r\n        res => {\r\n          if (res.success) {\r\n            this.albumList = res.result;\r\n          } else {\r\n            this.$message.warning(res.message);\r\n          }\r\n        }\r\n      );\r\n    },\r\n    // 课程分类选择\r\n    cateoryHandle(value) {\r\n      this.selectList.forEach(item => {\r\n        \r\n        if (item.id === value) {\r\n          this.cateName = item.name;\r\n          console.log(item.id)\r\n        }\r\n      });\r\n      \r\n      this.fatherId = value;\r\n        getAction(this.url.querySecondSelect, { fatherId: this.fatherId}).then(res => {\r\n          if (res.success) {\r\n            console.log(res.result);\r\n          if(res.result != \"\"){\r\n            this.selecBox = res.result;\r\n            this.selectrue = true;\r\n            console.log(this.selecBox)\r\n          }else{\r\n            this.selectrue = false;\r\n          }\r\n          } else {\r\n            this.$message.warning(res.message);\r\n          }\r\n        });\r\n    },\r\n    cateoryHandle2(value){\r\n      console.log(value)\r\n    this.selectList.forEach(item => {\r\n        if (item.id === value) {\r\n          this.cateName = item.name;\r\n           console.log(item.id)\r\n        }\r\n      });\r\n    },\r\n    // 专辑选择\r\n    vipSelectHandle(value) {\r\n      this.albumList.forEach(item => {\r\n        if (item.albumid === value) {\r\n          this.albumName = item.albumname;\r\n        }\r\n      });\r\n    },\r\n    // 类型选择\r\n    typeSelectHandle(value) {\r\n      this.type = value;\r\n    },\r\n    // 价格的大小校验\r\n\r\n    priceValidator(rule, value, callback) {\r\n      if (value && value >= 1) {\r\n        callback();\r\n      } else {\r\n        callback(\"价格不能小于1\");\r\n      }\r\n    },\r\n    // 根据id获取具体数据\r\n    getNewModel(id) {\r\n      const that = this;\r\n      getAction(this.url.getbyId, { id: id }).then(res => {\r\n        if (res.success) {\r\n          let record = res.result.product;\r\n          console.log(\"res.result.product\");\r\n          console.log(res.result);\r\n          this.albumName = res.result.albumName;\r\n          this.authorName = res.result.authorName;\r\n          this.cateName = res.result.cateName;\r\n          this.author = record.author;\r\n          this.type = record.type;\r\n          this.getAblum(record.author);\r\n          this.record = record;\r\n          this.model = Object.assign({}, record);\r\n          this.$nextTick(() => {\r\n            this.form.setFieldsValue(\r\n              pick(\r\n                this.model,\r\n                \"title\",\r\n                \"introduction\",\r\n                \"price\",\r\n                \"type\",\r\n                \"fistcategory\",\r\n                \"secondcategory\",\r\n                \"content\",\r\n                \"coverimg\",\r\n                \"album\",\r\n                \"createTime\",\r\n                \"clickcount\"\r\n              )\r\n            );\r\n            //  this.form.setFieldsValue({createTime:this.model.createTime?moment(this.model.createTime):null})\r\n          });\r\n        } else {\r\n          that.$message.warning(res.message);\r\n        }\r\n      });\r\n    },\r\n    makeEdit() {\r\n      // 判断详情类型\r\n      //类型1纯文字、2纯图片、3纯视频、4纯音频、5图文、6视频与图文、7音频与图文\r\n      let record = this.record;\r\n      let contentType = record.contentType;\r\n      let thisHtml = \"\";\r\n      let typeImgs = [];\r\n      switch (contentType) {\r\n        case 1:\r\n          this.content = record.content;\r\n          break;\r\n        case 2:\r\n          typeImgs = record.images.split(\";\");\r\n          for (let i = 0; i < typeImgs.length; i++) {\r\n            thisHtml = `<p><img src=\"${typeImgs[i]}\" /></p>`;\r\n          }\r\n          this.content = thisHtml;\r\n          break;\r\n        case 3:\r\n          if (\r\n            this.title === \"详情\" &&\r\n            record.videoImage &&\r\n            record.videoImage !== \"\"\r\n          ) {\r\n            thisHtml = `<a href=\"${\r\n              record.videoUrl\r\n            }\" target=\"_blank\" style=\"display:block;width:300px;height:150px;background-image:url(${\r\n              record.videoImage\r\n            });background-size: 100% 100%;background-size:cover;background-position: center center;position:relative;\"><img src=\"${require(\"@assets/play.png\")}\" alt=\"\" style=\"position: absolute;width: 50px;height: 50px;top: 50%;left: 50%;transform: translate(-50%,-50%);\"></a>`;\r\n          } else {\r\n            thisHtml = `<p><video controls=\"controls\" width=\"300\" height=\"150\"><source src=\"${record.videoUrl}\" /></video></p>`;\r\n          }\r\n\r\n          this.content = thisHtml;\r\n          break;\r\n        case 6:\r\n          if (\r\n            this.title === \"详情\" &&\r\n            record.videoImage &&\r\n            record.videoImage !== \"\"\r\n          ) {\r\n            thisHtml = `<a href=\"${\r\n              record.videoUrl\r\n            }\" target=\"_blank\" style=\"display:block;width:300px;height:150px;background-image:url(${\r\n              record.videoImage\r\n            });background-size: 100% 100%;background-size:cover;background-position: center center;position:relative;\"><img src=\"${require(\"@assets/play.png\")}\" alt=\"\" style=\"position: absolute;width: 50px;height: 50px;top: 50%;left: 50%;transform: translate(-50%,-50%);\"></a><p>${\r\n              record.content\r\n            }</p>`;\r\n          } else {\r\n            thisHtml = `<p><video controls=\"controls\" width=\"300\" height=\"150\"><source src=\"${record.videoUrl}\" /></video></p><p>${record.content}</p>`;\r\n          }\r\n\r\n          // thisHtml = `<p><video controls=\"controls\" width=\"300\" height=\"150\"><source src=\"${record.videoUrl}\" /></video></p>`;\r\n          this.content = thisHtml;\r\n          break;\r\n        case 4:\r\n          thisHtml = `<p><audio src=\"${record.videoUrl}\" controls=\"controls\"></audio></p>`;\r\n          this.content = thisHtml;\r\n          break;\r\n        case 7:\r\n          thisHtml = `<p><audio src=\"${record.videoUrl}\" controls=\"controls\"></audio></p>${record.content}`;\r\n          this.content = thisHtml;\r\n          break;\r\n        case 5:\r\n          this.content = record.content;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.model = Object.assign({}, record);\r\n      this.$nextTick(() => {\r\n        this.form.setFieldsValue(\r\n          pick(\r\n            this.model,\r\n            \"title\",\r\n            \"introduction\",\r\n            \"price\",\r\n            \"type\",\r\n            \"fistcategory\",\r\n            \"secondcategory\",\r\n            \"content\",\r\n            \"coverimg\",\r\n            \"album\",\r\n            \"createTime\",\r\n            \"clickcount\"\r\n          )\r\n        );\r\n        //  this.form.setFieldsValue({createTime:this.model.createTime?moment(this.model.createTime):null})\r\n      });\r\n    },\r\n    //获取课程详情\r\n    getContentModel(id) {\r\n      const that = this;\r\n      getAction(this.url.findList, { productId: id }).then(res => {\r\n        if (res.success) {\r\n          let record = res.result;\r\n          if (record.length > 0) {\r\n            this.contentList = res.result;\r\n            this.$forceUpdate();\r\n          } else {\r\n            setTimeout(() => {\r\n              that.makeEdit();\r\n            }, 500);\r\n          }\r\n          console.log(record);\r\n        } else {\r\n          that.$message.warning(res.message);\r\n        }\r\n      });\r\n    },\r\n    close() {\r\n      this.$emit(\"close\");\r\n      this.visible = false;\r\n      this.coverimg = \"\";\r\n      this.disableSubmit = false;\r\n      this.authorName = \"\";\r\n      this.albumName = \"\";\r\n      this.cateName = \"\";\r\n      this.content = \"\";\r\n      this.albumNum = \"\"; //专辑id\r\n      this.author = \"\"; // 作者id\r\n      this.percent = \"\";\r\n    },\r\n    handleOk() {\r\n      const that = this;\r\n      if (!this.author) {\r\n        this.$message.error(\"课程作者不能为空!\");\r\n      }\r\n      if (\r\n        (!this.contentList ||\r\n          this.contentList === \"\" ||\r\n          this.contentList.length === 0) &&\r\n        (!this.content || this.content === \"\" || this.content === undefined)\r\n      ) {\r\n        this.$message.error(\"课程详情不能为空!\");\r\n      }\r\n      this.contentList.forEach((item, index) => {\r\n        item.sort = index;\r\n      });\r\n      // 触发表单验证\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          that.confirmLoading = true;\r\n          let httpurl = \"\";\r\n          let method = \"\";\r\n          //  formData.createTime = formData.endTime?formData.endTime.format('YYYY-MM-DD HH:mm:ss'):null;\r\n          //  console.log(formData.createTime)\r\n          if (!this.model.id) {\r\n            httpurl += this.url.add;\r\n            method = \"post\";\r\n          } else {\r\n            httpurl += this.url.edit;\r\n            method = \"post\";\r\n          }\r\n          let allData = {};\r\n          let formData = Object.assign(this.model, values);\r\n          console.log(\"formData\");\r\n          console.log(formData.createTime);\r\n          if (formData.type === 1) {\r\n            formData.price = 0;\r\n          }\r\n          // formData.createTime = formData.endTime?formData.endTime.format('YYYY-MM-DD HH:mm:ss'):null\r\n          formData.coverimg = this.coverimg;\r\n          // let source = encodeURIComponent(JSON.stringify(this.contentList));\r\n          let source = JSON.stringify(this.contentList);\r\n          // formData.content = this.contentList;\r\n          formData.author = this.author;\r\n          if (this.contentList.length > 0) {\r\n            // httpurl+='?source='+source;\r\n            formData.content = \"\";\r\n          } else {\r\n            // httpurl+=\"?source=\";\r\n            formData.content = this.content;\r\n          }\r\n\r\n          // allData.authorName = this.authorName;\r\n          // allData.albumName = this.albumName;\r\n          // allData.cateName = this.cateName;\r\n          allData.product = formData;\r\n          allData.source = source;\r\n          //时间格式化\r\n          httpAction(httpurl, allData, method)\r\n            .then(res => {\r\n              if (res.success) {\r\n                that.$message.success(res.message);\r\n                that.$emit(\"ok\");\r\n              } else {\r\n                that.$message.warning(res.message);\r\n              }\r\n            })\r\n            .finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            });\r\n        }\r\n      });\r\n    },\r\n    handleCancel() {\r\n      this.close();\r\n    },\r\n    // 图片自定义上传\r\n    imgCustomRequest(data) {\r\n      // 开始转圈圈，上传中\r\n      this.loading = true;\r\n      // 获取文件的后缀名\r\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, \"\");\r\n      //请求token\r\n      httpAction(this.url.qiniuToken, {}, \"post\").then(res => {\r\n        if (res) {\r\n          let token = res.data.token;\r\n          const file = data.file;\r\n          const key = new Date().getTime() + suffix;\r\n          let domain = this.url.fileUpload;\r\n          let config = {\r\n            useCdnDomain: true, // 域名加速\r\n            region: null // 不指定具体区域，自动识别\r\n          };\r\n          let putExtra = {\r\n            fname: \"\",\r\n            params: {},\r\n            mimeType: null\r\n          };\r\n\r\n          let observable = qiniu.upload(file, key, token, putExtra, config);\r\n          observable.subscribe({\r\n            next: res => {\r\n              this.percent = res.total.percent.toFixed(2);\r\n              this.coverimg = \"\";\r\n              console.log(\"fname\");\r\n              console.log(res);\r\n            },\r\n\r\n            error: () => {\r\n              this.$message.error(\"上传失败\");\r\n              this.loading = false;\r\n              this.coverimg = this.canimg;\r\n            },\r\n            complete: response => {\r\n              let allUrl = `${domain}/${response.key}`;\r\n              // 开始转圈圈，上传中\r\n              this.coverimg = allUrl;\r\n              this.loading = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    // 文件自定义上传\r\n    fileCustomRequest(data) {\r\n      // 上传文件的类型\r\n      const fileType = data.file.type;\r\n      this.confirmLoading = true;\r\n      // 获取文件的后缀名\r\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, \"\");\r\n      //请求token\r\n      httpAction(this.url.qiniuToken, {}, \"post\").then(res => {\r\n        if (res) {\r\n          let token = res.data.token;\r\n          const file = data.file;\r\n          const key = new Date().getTime() + suffix;\r\n          let domain = this.url.fileUpload;\r\n          let config = {\r\n            useCdnDomain: true, // 域名加速\r\n            region: null // 不指定具体区域，自动识别\r\n          };\r\n          let putExtra = {\r\n            fname: \"\",\r\n            params: {},\r\n            mimeType: null\r\n          };\r\n          let observable = qiniu.upload(file, key, token, putExtra, config);\r\n          observable.subscribe({\r\n            next: res => {\r\n              const thisPercent = res.total.percent.toFixed(2);\r\n              this.filePercent = thisPercent + \"%\";\r\n              console.log(res.total.percent.toFixed(2));\r\n            },\r\n            error: () => {\r\n              this.$message.error(\"上传失败\");\r\n              this.confirmLoading = false;\r\n              this.filePercent = \"\";\r\n            },\r\n            complete: response => {\r\n              let allUrl = `${domain}/${response.key}`;\r\n              console.log(\"allUrl\");\r\n              console.log(allUrl);\r\n              //  否则为视频资源\r\n              const coverimg = allUrl;\r\n              if (fileType.indexOf(\"image\") < 0) {\r\n                //  视频资源时需要请求接口获取时长\r\n                getAction(allUrl + \"?avinfo\").then(res => {\r\n                  // 时长\r\n                  let makeDuration = res.format.duration;\r\n                  let thisDuration = this.setDuration(makeDuration);\r\n                  const dataCon = {\r\n                    type: this.thisType,\r\n                    timeurl: thisDuration,\r\n                    title: \"\",\r\n                    url: coverimg\r\n                  };\r\n                  this.contentList.splice(this.thisIndex, 0, dataCon);\r\n\r\n                  this.$forceUpdate();\r\n                });\r\n              } else {\r\n                const dataCon = {\r\n                  type: this.thisType,\r\n                  timeurl: \"\",\r\n                  title: \"\",\r\n                  url: coverimg\r\n                };\r\n                this.contentList.splice(this.thisIndex, 0, dataCon);\r\n                console.log(\"this.contentList\");\r\n                console.log(this.contentList);\r\n                this.$forceUpdate();\r\n              }\r\n\r\n              this.confirmLoading = false;\r\n              this.filePercent = \"\";\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    // 添加专辑弹出框\r\n    addAlbum() {\r\n      this.$refs.addAblumModal.add();\r\n      this.$refs.addAblumModal.visible = true;\r\n    },\r\n    // 专辑添加成功后重新获取专辑数据\r\n    modalFormOk() {\r\n      this.getAblum(this.author);\r\n    },\r\n    //  视频添加成功\r\n    VideoFromOK(value) {\r\n      this.contentList.splice(this.thisIndex, 0, value);\r\n      this.$forceUpdate();\r\n      console.log(\"视频添加成功\");\r\n    },\r\n    setDuration(dur) {\r\n      // 秒数取整\r\n      let intTime = parseInt(dur);\r\n      let fen = \"0\";\r\n      let miao = \"0\";\r\n      // 小于10秒， 格式  00:0_\r\n      if (intTime < 10) {\r\n        return `00:0${intTime}`;\r\n      }\r\n      // 大于10秒小于60秒， 格式   00:_\r\n      if (intTime < 60) {\r\n        return `00:${intTime}`;\r\n      }\r\n      // 大于1分钟小于60分钟  格式  _:_\r\n      if (intTime < 3600) {\r\n        const mins = parseInt(intTime / 60);\r\n        const sec = intTime % 60;\r\n        if (mins < 10) {\r\n          fen = `0${mins}`;\r\n        } else {\r\n          fen = `${mins}`;\r\n        }\r\n        if (sec < 10) {\r\n          miao = `0${sec}`;\r\n        } else {\r\n          miao = `${sec}`;\r\n        }\r\n        return `${fen}:${miao}`;\r\n      }\r\n      // 大于60分钟   格式  _:_:_\r\n      if (intTime >= 3600) {\r\n        let hour = parseInt(intTime / 3600);\r\n        const mins = parseInt((intTime % 3600) / 60);\r\n        const sec = ((intTime % 3600) % 60) % 60;\r\n        if (mins < 10) {\r\n          fen = `0${mins}`;\r\n        } else {\r\n          fen = `${mins}`;\r\n        }\r\n        if (sec < 10) {\r\n          miao = `0${sec}`;\r\n        } else {\r\n          miao = `${sec}`;\r\n        }\r\n        return `${hour}:${fen}:${miao}`;\r\n      }\r\n    }\r\n  }\r\n};\r\n",null]}