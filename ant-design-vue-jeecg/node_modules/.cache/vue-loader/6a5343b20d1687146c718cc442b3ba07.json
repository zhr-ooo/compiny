{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\awardList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\awardList.vue","mtime":1595828504329},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport awardAddModal from \"./modules/awardAddModal\";\r\nimport addRealate from \"./modules/addRealate\";\r\nimport ProductNewBigImg from \"./modules/ProductNewBigImg\";\r\nimport ProductNewAuditModel from \"./modules/ProductNewAuditModel\";\r\nimport { JeecgListMixin } from \"@/mixins/JeecgListMixin\";\r\nimport { getAction, putAction, postAction } from \"@/api/manage\";\r\nimport JEllipsis from \"@/components/jeecg/JEllipsis\";\r\n\r\nexport default {\r\n  name: \"awardList\",\r\n  mixins: [JeecgListMixin],\r\n  components: {\r\n    JEllipsis,\r\n    awardAddModal,\r\n    addRealate,\r\n    ProductNewBigImg,\r\n    ProductNewAuditModel\r\n  },\r\n  data() {\r\n    return {\r\n      selectList1: [],\r\n      selectList: [],\r\n      type: \"\",\r\n      description: \"有奖问答列表\",\r\n      disableSubmit: false,\r\n      autoSubmit: false,\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: \"有奖问答标题\",\r\n          align: \"center\",\r\n          dataIndex: \"title\",\r\n          scopedSlots: { customRender: \"templateTitle\" }\r\n        },\r\n        {\r\n          title: \"封面\",\r\n          align: \"center\",\r\n          dataIndex: \"images\",\r\n          scopedSlots: { customRender: \"avatar\" }\r\n        },\r\n        {\r\n          title: \"有奖问答分类\",\r\n          align: \"center\",\r\n          dataIndex: \"groupName\"\r\n        },\r\n        {\r\n          title: \"选项A答案\",\r\n          align: \"center\",\r\n          dataIndex: \"firstAnswer\",\r\n          scopedSlots: { customRender: \"templateTitle\" }\r\n        },\r\n        {\r\n          title: \"选项B答案\",\r\n          align: \"center\",\r\n          dataIndex: \"secondAnswer\",\r\n          scopedSlots: { customRender: \"templateTitle\" }\r\n        },\r\n        {\r\n          title: \"选项C答案\",\r\n          align: \"center\",\r\n          dataIndex: \"threeAnswer\",\r\n          scopedSlots: { customRender: \"templateTitle\" }\r\n        },\r\n        {\r\n          title: \"正确答案\",\r\n          align: \"center\",\r\n          dataIndex: \"trueAnswer\"\r\n        },\r\n        {\r\n          title: \"v币总金额\",\r\n          align: \"center\",\r\n          dataIndex: \"totalMoney\"\r\n        },\r\n        {\r\n          title: \"参与人数\",\r\n          align: \"center\",\r\n          dataIndex: \"number\"\r\n        },\r\n        {\r\n          title: \"单人v币金额\",\r\n          align: \"center\",\r\n          dataIndex: \"money\"\r\n        },\r\n        {\r\n          title: \"回答人数\",\r\n          align: \"center\",\r\n          dataIndex: \"answerCount\"\r\n        },\r\n\r\n        {\r\n          title: \"发布日期\",\r\n          align: \"center\",\r\n          dataIndex: \"createTime\"\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          align: \"center\",\r\n          dataIndex: \"status\",\r\n          customRender: function(text) {\r\n            if (text == 1) {\r\n              return \"未完成\";\r\n            } else if (text == 2) {\r\n              return \"已满\";\r\n            } else if (text == 3) {\r\n              return \"已关闭\";\r\n            } else if (text == 0) {\r\n              return \"未发布\";\r\n            }\r\n          }\r\n        },\r\n\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"action\",\r\n          align: \"center\",\r\n          scopedSlots: { customRender: \"action\" }\r\n        }\r\n      ],\r\n      selectList: [],\r\n      url: {\r\n        list: \"/system/question/list\",\r\n        close: \"/system/question/close\",\r\n        //查询分类接口\r\n        selectNewList: \"/system/question/category/category-list\",\r\n        copy: \"/system/question/copy\",\r\n        release: \"/system/question/release\"\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    //获取分类查询数据\r\n    getAction(this.url.selectNewList).then(res => {\r\n      if (res.success) {\r\n        console.log(\"res\");\r\n        console.log(res);\r\n        this.selectList = res.result;\r\n      } else {\r\n        this.$message.warning(res.message);\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    handleEdit1: function(record) {\r\n      this.$refs.modalForm.edit(record);\r\n      this.$refs.modalForm.title = \"编辑\";\r\n      this.$refs.modalForm.disableSubmit = false;\r\n    },\r\n\r\n    handleRelease: function(record) {\r\n      console.log(\"编辑发布\")\r\n      this.$refs.modalForm1.edit(record);\r\n      this.$refs.modalForm1.title = \"编辑发布\";\r\n      this.$refs.modalForm1.disableSubmit = false;\r\n    },\r\n    haddleClose(record) {\r\n      let arr = `?questionId=${record.id}`;\r\n      const that = this;\r\n      putAction(this.url.close + arr).then(res => {\r\n        if (res.success) {\r\n          that.$message.success(res.message);\r\n        } else {\r\n          that.$message.warning(res.message);\r\n        }\r\n        that.loadData();\r\n      });\r\n    },\r\n    haddleCopy(record) {\r\n      let arr = `?id=${record.id}`;\r\n      const that = this;\r\n      postAction(this.url.copy + arr).then(res => {\r\n        if (res.success) {\r\n          that.$message.success(res.message);\r\n        } else {\r\n          that.$message.warning(res.message);\r\n        }\r\n        that.loadData();\r\n      });\r\n    },\r\n    cateoryHandle(value) {\r\n      this.selectList.forEach(item => {\r\n        if (item.id === value) {\r\n          this.groupName = item.name;\r\n          this.cateName = item.id;\r\n          console.log(\"this.cateName\");\r\n          console.log(this.cateName);\r\n        }\r\n      });\r\n    },\r\n    dropSelect() {\r\n      if (!this.type || this.type === \"\") {\r\n        this.$message.warning(\"请先选择分类类型!\");\r\n      }\r\n    },\r\n\r\n    //   cateoryHandle1(value) {\r\n    //   this.selectList.forEach(item => {\r\n    //     if (item.id === value) {\r\n    //       this.groupName = item.name\r\n    //       this.cateName = item.id;\r\n    //     }\r\n\r\n    //   });\r\n    // },\r\n    typeSelectHandle(value) {\r\n      this.type = value;\r\n      if (this.type == 1) {\r\n        getAction(this.url.selectNewList, { parentId: 1 }).then(res => {\r\n          if (res.success) {\r\n            console.log(res);\r\n            this.selectList = res.result;\r\n          } else {\r\n            this.$message.warning(res.message);\r\n          }\r\n        });\r\n      } else if (this.type == 2) {\r\n        getAction(this.url.selectNewList, { parentId: 2 }).then(res => {\r\n          if (res.success) {\r\n            console.log(res);\r\n            this.selectList1 = res.result;\r\n          } else {\r\n            this.$message.warning(res.message);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    clickThenCheck(record) {\r\n      return {\r\n        on: {\r\n          click: () => {\r\n            this.$refs.modalForm.edit(record);\r\n            this.$refs.modalForm.title = \"详情\";\r\n            this.$refs.modalForm.disableSubmit = true;\r\n          }\r\n        }\r\n      };\r\n    },\r\n    handleDelete1: function(id) {\r\n      if (!this.url.delete) {\r\n        this.$message.error(\"请设置url.delete属性!\");\r\n        return;\r\n      }\r\n      var that = this;\r\n      deleteAction(that.url.delete, { categoryId: id }).then(res => {\r\n        if (res.success) {\r\n          that.$message.success(res.message);\r\n          that.loadData();\r\n        } else {\r\n          that.$message.warning(res.message);\r\n        }\r\n      });\r\n    },\r\n\r\n    //  图片点击放大\r\n    bigImg(text) {\r\n      if (text) {\r\n        this.$refs.bigImg.make(text);\r\n      }\r\n    }\r\n  }\r\n};\r\n",null]}