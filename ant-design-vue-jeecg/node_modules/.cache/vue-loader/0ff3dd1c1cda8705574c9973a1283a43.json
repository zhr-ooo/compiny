{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductNewModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductNewModal.vue","mtime":1595310351602},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport { httpAction, getAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\"\nimport JCodeEditor from \"@/components/jeecg/JCodeEditor\"\nimport JEditor from \"@/components/jeecg/JEditor\"\nimport AvatarModal from \"@/views/account/settings/AvatarModal\";\nimport ProductAddAlbumModal from \"./ProductAddAlbumModal\";\nimport * as qiniu from 'qiniu-js'\n\nexport default {\n  name: \"ProductNewModal\",\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 },\n      },\n      labelColk: {\n        xs: { span: 24 },\n        sm: { span: 2 },\n      },\n      wrapperColk: {\n        xs: { span: 24 },\n        sm: { span: 21 },\n      },\n      loading: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      coverimg: '',\n      canimg: '',\n      percent: '',\n      refusereason: '',\n      disableSubmit: false,\n      albumList: [],\n      content: '',\n      headers: {},\n      selectList: [],\n      albumName: '',    //专辑名称\n      authorName: '',   //作者名称\n      validatorRules:{\n      },\n      url: {\n        add: \"/product/productNew/add\",\n        edit: \"/product/productNew/edit\",\n        getbyId: '/product/productNew/queryById',\n        selectNewList: '/product/productCategory/queryFirstSelect',   //分类选择\n        albumlist: '/user/album/findAlbumSelect',    // 专辑\n        findList: '/product/productsource/findListByProductId',    // 课程资源详情\n        fileUpload: window._CONFIG['domianQiNiu'],\n        qiniuToken: '/qiniuUpToken'\n      },\n    }\n  },\n  components: {\n    JCodeEditor,\n    JEditor,\n    AvatarModal,\n    ProductAddAlbumModal\n  },\n  created () {\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\":token};\n    // this.getAblum()\n    getAction(this.url.selectNewList).then((res) => {\n      if (res.success) {\n        this.selectList = res.result;\n      } else {\n        this.$message.warning(res.message);\n      }\n    })\n  },\n  computed:{\n    uploadAction:function () {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    add () {\n      this.coverimg = '';\n      this.refusereason = '';\n      this.content = '';\n      this.edit({});\n    },\n    edit (record) {\n      console.log(record.id)\n      this.coverimg = record.coverimg;\n      this.canimg = record.coverimg;\n      this.form.resetFields();\n      // this.getAblum()\n      if(record.id) {\n        this.getNewModel (record.id, record.type);\n        if (record.type === '1' || record.type === '3') {\n          this.getContentModel (record.id)\n        }\n      } else {\n        this.model = Object.assign({}, record);\n        this.visible = true;\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model,'title','introduction','fistcategory', 'coverimg', 'price'))\n        });\n      }\n    },\n    //获取课程专辑\n    getAblum() {\n      httpAction(this.url.albumlist, {}, 'POST').then(res => {\n        if (res.success) {\n          this.albumList = res.result\n        } else {\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    // 根据id获取具体数据\n    getNewModel (id, type) {\n      const that = this;\n      getAction(this.url.getbyId,{id: id}).then((res) => {\n        if(res.success){\n          let record = res.result.product;\n          this.refusereason = record.refusereason;\n          this.albumName = res.result.albumName;\n          this.authorName = res.result.authorName;\n          if (type !== '1' && type !== '3') {\n            this.content = record.content;\n          }\n          this.model = Object.assign({}, record);\n          this.visible = true;\n          this.$nextTick(() => {\n            this.form.setFieldsValue(pick(this.model,'title','introduction','fistcategory','coverimg', 'price'))\n          });\n        }else{\n          that.$message.warning(res.message);\n        }\n      })\n    },\n    //获取课程详情\n    getContentModel (id) {\n      let html = '';\n      const that = this;\n      getAction(this.url.findList,{productId: id}).then((res) => {\n        if(res.success){\n          let record = res.result;\n          html += '<div>';\n          record.forEach(item => {\n            if (item.title && item.title !== '') {\n              html += `<strong style=\"margin-left: 100px;\">${item.title}</strong>`\n            }\n            switch (item.type) {\n              case 'img':\n                html += `<p><img src=\"${item.url}\" style=\"width:300px;\" /></p>`;\n                break;\n              case 'text':\n                html += `<p style=\"text-indent: 2em;\">${item.url}</p>`;\n                break;\n              case 'video':\n\n                if(item.timeurl && item.timeurl !== '') {\n                  html += `<a href=\"${item.url}\" target=\"_blank\" style=\"display:block;width:300px;height:150px;background-image:url(${item.timeurl});background-size: 100% auto;object-fit:cover;position:relative;\"><img src=\"${require('@assets/play.png')}\" alt=\"\" style=\"position: absolute;width: 50px;height: 50px;top: 50%;left: 50%;transform: translate(-50%,-50%);\"></a>`\n                } else {\n                  html += `<p><video controls=\"controls\" width=\"300\" height=\"150\"><source src=\"${item.url}\" /></video></p>`;\n                }\n                \n                break;\n              case 'audio':\n                html += `<p><audio src=\"${item.url}\" controls=\"controls\"></audio></p>`;\n                break;\n              default:\n                break\n            }\n          });\n          html += '</div>';\n          this.content = html;\n          console.log(record)\n        }else{\n          that.$message.warning(res.message);\n        }\n      })\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.coverimg = '';\n      this.disableSubmit = false;\n      this.content = '';\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n            method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          formData.coverimg = this.coverimg;\n          formData.content = this.content;\n          //时间格式化\n\n          console.log(formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    // 自定义上传\n    customRequest (data) {\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, '')\n      //请求token\n      httpAction(this.url.qiniuToken, {}, 'post').then((res) => {\n        if (res) {\n          let token = res.data.token\n          const file = data.file\n          const key = new Date().getTime() + suffix;\n          let domain = this.url.fileUpload\n          let config = {\n            useCdnDomain: true,\n            region: null\n          }\n          let putExtra = {\n            fname: '',\n            params: {},\n            mimeType: null\n          }\n          let observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: (res) => {\n              this.loading = true;\n              this.percent = res.total.percent.toFixed(2)\n              this.coverimg = '';\n            },\n            error: () => {\n              this.$message.error('上传失败')\n              this.loading = false;\n              this.coverimg = this.canimg\n            },\n            complete: (response) => {\n              this.coverimg = `${domain}/${response.key}`;\n              this.loading = false;\n            }\n          })\n        }\n      })\n    },\n    addAlbum () {\n      this.$refs.addAblumModal.add()\n      this.$refs.addAblumModal.visible = true\n    },\n    modalFormOk () {\n      httpAction(this.url.albumList, {}, 'POST').then(res => {\n        if (res.success) {\n          this.albumList = res.result\n        } else {\n          this.$message.warning(res.message)\n        }\n      })\n    }\n  }\n}\n",null]}