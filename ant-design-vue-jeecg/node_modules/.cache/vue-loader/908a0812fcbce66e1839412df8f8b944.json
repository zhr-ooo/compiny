{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\components\\jeecg\\JEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\components\\jeecg\\JEditor.vue","mtime":1588673568112},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from \"@/api/manage\";\nimport tinymce from 'tinymce/tinymce'\nimport Editor from '@tinymce/tinymce-vue'\nimport 'tinymce/themes/silver/theme'\nimport * as qiniu from 'qiniu-js'\n// import 'tinymce/plugins/image'\nimport '@/utils/plugin';\nimport 'tinymce/plugins/media'\nimport 'tinymce/plugins/table'\nimport 'tinymce/plugins/lists'\nimport 'tinymce/plugins/contextmenu'\nimport 'tinymce/plugins/wordcount'\nimport 'tinymce/plugins/colorpicker'\nimport 'tinymce/plugins/textcolor'\nimport 'tinymce/plugins/fullscreen'\nexport default {\n  components: {\n    Editor\n  },\n  props: {\n    value: {\n      type: String,\n      required:false\n    },\n    triggerChange:{\n      type: Boolean,\n      default: false,\n      required:false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    plugins: {\n      type: [String, Array],\n      default: 'lists image media table textcolor wordcount contextmenu fullscreen link'\n    },\n    toolbar: {\n      type: [String, Array],\n      default: 'undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists image media table link | removeformat | fullscreen'\n    }\n  },\n  data() {\n    return {\n      percent: '',\n      isChuan: false,\n      //初始化配置\n      init: {\n        language_url: '/tinymce/langs/zh_CN.js',\n        language: 'zh_CN',\n        skin_url: '/tinymce/skins/lightgray',\n        height: 300,\n        plugins: this.plugins,\n        toolbar: this.toolbar,\n        branding: false,\n        menubar: false,\n        file_picker_callback: (callback, value, meta) => {\n          var input = document.createElement('input');\n          input.setAttribute('type', 'file');\n          input.click();\n          let that = this;\n          input.onchange = function() {\n            var files = this.files[0];\n            console.log(files)\n            if (meta.filetype == 'media') {\n              if (files.type.indexOf('video') == -1 && files.type.indexOf('audio') == -1) {\n                that.$message.warning('请选择视频或音频');\n                return\n              }\n            }\n            if (files.type.indexOf('video') > -1) {\n              let url = URL.createObjectURL(files)\n              var audioElement = new Audio(url)\n              audioElement.addEventListener('loadedmetadata',function(){\n                let playTime = audioElement.duration; //playTime就是当前视频长度\n                if (playTime > 600) {\n                  that.$message.warning('视频时长不能超过10分钟!')\n                  that.isChuan = false;\n                } else {\n                  that.isChuan = true;\n                }\n              })\n            }\n            if (meta.filetype == 'image') {\n              if (files.type.indexOf('image') == -1) {\n                that.$message.warning('请选择图片');\n                return\n              }\n            }\n            // let formData = new FormData();\n            const suffix = \".\" + files.name.replace(/^.+\\./, '')\n            // let file = new FormData();\n            // file.append('file', files, files.name);\n            if (that.isChuan) {\n              let hide = that.$message.loading('上传中...' + that.percent, 0);\n              httpAction('/qiniuUpToken', {}, 'post').then((res) => {\n                if (res) {\n                  let token = res.data.token\n                  // let file = new FormData();\n                  // file.append('file', files, files.name);\n                  const key = new Date().getTime() + suffix;\n                  let domain = window._CONFIG['domianQiNiu']\n                  let config = {\n                    useCdnDomain: true,\n                    region: null\n                  }\n                  let putExtra = {\n                    fname: '',\n                    params: {},\n                    mimeType: null\n                  }\n                  let observable = qiniu.upload(files, key, token, putExtra, config);\n                  observable.subscribe({\n                    next: (res) => {\n                      that.percent = res.total.percent.toFixed(2)\n                    },\n                    error: () => {\n                      that.$message.error('上传失败')\n                      setTimeout(hide, 500)\n                    },\n                    complete: (response) => {\n                      const coverimg = `${domain}/${response.key}`;\n                      setTimeout(hide, 500)\n                      callback(coverimg);\n                    }\n                  })\n                }\n              })\n            }\n\n\n\n            // formData.append('multipartFiles', files, files.name);\n            // httpAction('/fileupload',formData,'post').then((res)=>{\n            //   console.log(res);\n            //   if(res.statusCode == '200') {\n            //     callback(res.data[0]);\n            //   } else {\n            //     callback(files.name);\n            //   }\n            // }).finally(() => {\n            //   // that.close();\n            //   setTimeout(hide, 500)\n            // })\n            console.log(files);\n          };\n        },\n      },\n      myValue: this.value\n    }\n  },\n  mounted() {\n    tinymce.init({})\n  },\n  methods: {\n\n    onClick(e) {\n      this.$emit('onClick', e, tinymce)\n    },\n    //可以添加一些自己的自定义事件，如清空内容\n    clear() {\n      this.myValue = ''\n    }\n  },\n  watch: {\n    value(newValue) {\n      this.myValue = (newValue == null ? '' : newValue)\n    },\n    myValue(newValue) {\n      console.log(newValue)\n      if(this.triggerChange){\n        console.log(1)\n        this.$emit('change', newValue)\n      }else{\n        console.log(2)\n        this.$emit('input', newValue)\n      }\n    }\n  }\n}\n\n",{"version":3,"sources":["JEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"JEditor.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <div class=\"tinymce-editor\">\n    <editor\n      v-model=\"myValue\"\n      :init=\"init\"\n      :disabled=\"disabled\"\n      @onClick=\"onClick\">\n    </editor>\n\n  </div>\n</template>\n\n<script>\n  import { httpAction } from \"@/api/manage\";\n  import tinymce from 'tinymce/tinymce'\n  import Editor from '@tinymce/tinymce-vue'\n  import 'tinymce/themes/silver/theme'\n  import * as qiniu from 'qiniu-js'\n  // import 'tinymce/plugins/image'\n  import '@/utils/plugin';\n  import 'tinymce/plugins/media'\n  import 'tinymce/plugins/table'\n  import 'tinymce/plugins/lists'\n  import 'tinymce/plugins/contextmenu'\n  import 'tinymce/plugins/wordcount'\n  import 'tinymce/plugins/colorpicker'\n  import 'tinymce/plugins/textcolor'\n  import 'tinymce/plugins/fullscreen'\n  export default {\n    components: {\n      Editor\n    },\n    props: {\n      value: {\n        type: String,\n        required:false\n      },\n      triggerChange:{\n        type: Boolean,\n        default: false,\n        required:false\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      plugins: {\n        type: [String, Array],\n        default: 'lists image media table textcolor wordcount contextmenu fullscreen link'\n      },\n      toolbar: {\n        type: [String, Array],\n        default: 'undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists image media table link | removeformat | fullscreen'\n      }\n    },\n    data() {\n      return {\n        percent: '',\n        isChuan: false,\n        //初始化配置\n        init: {\n          language_url: '/tinymce/langs/zh_CN.js',\n          language: 'zh_CN',\n          skin_url: '/tinymce/skins/lightgray',\n          height: 300,\n          plugins: this.plugins,\n          toolbar: this.toolbar,\n          branding: false,\n          menubar: false,\n          file_picker_callback: (callback, value, meta) => {\n            var input = document.createElement('input');\n            input.setAttribute('type', 'file');\n            input.click();\n            let that = this;\n            input.onchange = function() {\n              var files = this.files[0];\n              console.log(files)\n              if (meta.filetype == 'media') {\n                if (files.type.indexOf('video') == -1 && files.type.indexOf('audio') == -1) {\n                  that.$message.warning('请选择视频或音频');\n                  return\n                }\n              }\n              if (files.type.indexOf('video') > -1) {\n                let url = URL.createObjectURL(files)\n                var audioElement = new Audio(url)\n                audioElement.addEventListener('loadedmetadata',function(){\n                  let playTime = audioElement.duration; //playTime就是当前视频长度\n                  if (playTime > 600) {\n                    that.$message.warning('视频时长不能超过10分钟!')\n                    that.isChuan = false;\n                  } else {\n                    that.isChuan = true;\n                  }\n                })\n              }\n              if (meta.filetype == 'image') {\n                if (files.type.indexOf('image') == -1) {\n                  that.$message.warning('请选择图片');\n                  return\n                }\n              }\n              // let formData = new FormData();\n              const suffix = \".\" + files.name.replace(/^.+\\./, '')\n              // let file = new FormData();\n              // file.append('file', files, files.name);\n              if (that.isChuan) {\n                let hide = that.$message.loading('上传中...' + that.percent, 0);\n                httpAction('/qiniuUpToken', {}, 'post').then((res) => {\n                  if (res) {\n                    let token = res.data.token\n                    // let file = new FormData();\n                    // file.append('file', files, files.name);\n                    const key = new Date().getTime() + suffix;\n                    let domain = window._CONFIG['domianQiNiu']\n                    let config = {\n                      useCdnDomain: true,\n                      region: null\n                    }\n                    let putExtra = {\n                      fname: '',\n                      params: {},\n                      mimeType: null\n                    }\n                    let observable = qiniu.upload(files, key, token, putExtra, config);\n                    observable.subscribe({\n                      next: (res) => {\n                        that.percent = res.total.percent.toFixed(2)\n                      },\n                      error: () => {\n                        that.$message.error('上传失败')\n                        setTimeout(hide, 500)\n                      },\n                      complete: (response) => {\n                        const coverimg = `${domain}/${response.key}`;\n                        setTimeout(hide, 500)\n                        callback(coverimg);\n                      }\n                    })\n                  }\n                })\n              }\n\n\n\n              // formData.append('multipartFiles', files, files.name);\n              // httpAction('/fileupload',formData,'post').then((res)=>{\n              //   console.log(res);\n              //   if(res.statusCode == '200') {\n              //     callback(res.data[0]);\n              //   } else {\n              //     callback(files.name);\n              //   }\n              // }).finally(() => {\n              //   // that.close();\n              //   setTimeout(hide, 500)\n              // })\n              console.log(files);\n            };\n          },\n        },\n        myValue: this.value\n      }\n    },\n    mounted() {\n      tinymce.init({})\n    },\n    methods: {\n\n      onClick(e) {\n        this.$emit('onClick', e, tinymce)\n      },\n      //可以添加一些自己的自定义事件，如清空内容\n      clear() {\n        this.myValue = ''\n      }\n    },\n    watch: {\n      value(newValue) {\n        this.myValue = (newValue == null ? '' : newValue)\n      },\n      myValue(newValue) {\n        console.log(newValue)\n        if(this.triggerChange){\n          console.log(1)\n          this.$emit('change', newValue)\n        }else{\n          console.log(2)\n          this.$emit('input', newValue)\n        }\n      }\n    }\n  }\n\n</script>\n<style>\n  .ant-message {\n    z-index: 3000 !important;\n  }\n</style>\n"]}]}