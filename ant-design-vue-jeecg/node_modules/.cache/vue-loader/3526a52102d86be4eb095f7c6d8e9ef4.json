{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductVipAddImg.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductVipAddImg.vue","mtime":1589876280796},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\";\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { httpAction, getAction } from \"@/api/manage\";\nimport * as qiniu from \"qiniu-js\";\nexport default {\n  name: \"ProductVipAddImg\",\n  data() {\n    return {\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 }\n      },\n      headers: {}, // 文件上传的请求头\n      videoUrl: \"\", // 视频地址\n      coverimg: \"\", // 第一帧图片\n      canimg: \"\",\n      percent: \"\", // 图片上传进度\n      videoPercent: 0, // 视频上传进度\n      isVideo: false, // 进度条是否显示\n      loading: false,\n      thisDuration: \"\",\n      valUrl: {\n        rules: [\n          {\n            validator: this.validateVideo\n          }\n        ]\n      },\n      url: {\n        fileUpload: window._CONFIG[\"domianQiNiu\"], // 七牛云地址\n        qiniuToken: \"/qiniuUpToken\"\n      }\n    };\n  },\n  created() {\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = { \"X-Access-Token\": token };\n  },\n  computed: {\n    uploadAction: function() {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    validateVideo(rule, value, callback) {\n      if (!this.videoUrl || this.videoUrl === \"\") {\n        callback(\"请上传时长不超过10分钟的视频\");\n      } else {\n        callback();\n      }\n    },\n    show() {\n      this.visible = true;\n      this.form.resetFields();\n      this.videoUrl = \"\";\n      this.coverimg = \"\";\n      this.confirmLoading = false;\n      this.videoPercent = 0;\n      this.loading = false;\n      this.thisDuration = \"\";\n      this.percent = \"\";\n      this.isVideo = false;\n    },\n    // 关闭、取消\n    handleCancel() {\n      this.visible = false;\n    },\n    handleOk() {\n      const that = this;\n      this.form.validateFields(\n        [\"url\", \"timeurl\"],\n        { force: true },\n        (err, values) => {\n          if (!err) {        \n            let formData = Object.assign(this.model, values);\n            formData.url = this.videoUrl;\n            formData.timeurl = this.coverimg + \"###\" + this.thisDuration;\n            formData.type = \"video\";\n            formData.title = \"\";\n             console.log('formData');\n             console.log(formData)\n            that.$emit(\"ok\", formData);\n\n            this.handleCancel();\n          }\n        }\n      );\n    },\n    // 上传之前的钩子函数\n    beforeUpload(file) {\n      const that = this;\n      let url = URL.createObjectURL(file);\n      var audioElement = new Audio(url);\n      return new Promise((resolve, reject) => {\n        audioElement.addEventListener(\"loadedmetadata\", function() {\n          let playTime = audioElement.duration; //playTime就是当前视频长度\n          if (playTime > 600) {\n            that.$message.warning(\"视频时长不能超过10分钟!\");\n            reject(false);\n          } else {\n            resolve(true);\n          }\n        });\n      });\n    },\n    // 文件自定义上传\n    imgCustomRequest(data) {\n      // 上传文件的类型\n      const fileType = data.file.type;\n      // 上传的图片类型\n      if (fileType.indexOf(\"image\") > -1) {\n        // 开始转圈圈，上传中\n        this.loading = true;\n      } else {\n        //  否则为视频资源\n        this.isVideo = true;\n      }\n      // 获取文件的后缀名\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, \"\");\n      //请求token\n      httpAction(this.url.qiniuToken, {}, \"post\").then(res => {\n        if (res) {\n          let token = res.data.token;\n          const file = data.file;\n          const key = new Date().getTime() + suffix;\n          let domain = this.url.fileUpload;\n          let config = {\n            useCdnDomain: true, // 域名加速\n            region: null // 不指定具体区域，自动识别\n          };\n          let putExtra = {\n            fname: \"\",\n            params: {},\n            mimeType: null\n          };\n          let observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: res => {\n              if (fileType.indexOf(\"image\") > -1) {\n                this.percent = res.total.percent.toFixed(2);\n                this.coverimg = \"\";\n              } else {\n                this.videoPercent = res.total.percent.toFixed(2);\n              }\n            },\n            error: () => {\n              this.$message.error(\"上传失败\");\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                this.loading = false;\n                this.coverimg = this.canimg;\n              } else {\n                //  否则为视频资源\n                this.isVideo = false;\n              }\n            },\n            // success ： 当请求成功时调用的函数。\n            // complete ：当请求成功时，整个请求都已经完成后调用的函数。\n            // 解析 ：一般情况下，用success做请求就可以，但是如果我们用了异步请求，又想按顺序执行代码，那就要用到complete。当然ajax也有同步属性：\n            complete: response => {\n              let allUrl = `${domain}/${response.key}`;\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                this.coverimg = allUrl;\n                this.loading = false;\n              } else {\n                //  否则为视频资源\n                this.isVideo = false;\n                this.videoUrl = allUrl;\n                //  视频资源时需要请求接口获取时长\n                getAction(allUrl + \"?avinfo\").then(res => {\n                  // 时长\n                  let makeDuration = res.format.duration;\n                  this.thisDuration = this.setDuration(makeDuration);\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    setDuration(dur) {\n      // 秒数取整\n      let intTime = parseInt(dur);\n      let fen = \"0\";\n      let miao = \"0\";\n      // 小于10秒， 格式  00:0_\n      if (intTime < 10) {\n        return `00:0${intTime}`;\n      }\n      // 大于10秒小于60秒， 格式   00:_\n      if (intTime < 60) {\n        return `00:${intTime}`;\n      }\n      // 大于1分钟小于60分钟  格式  _:_\n      if (intTime < 3600) {\n        const mins = parseInt(intTime / 60);\n        const sec = intTime % 60;\n        if (mins < 10) {\n          fen = `0${mins}`;\n        } else {\n          fen = `${mins}`;\n        }\n        if (sec < 10) {\n          miao = `0${sec}`;\n        } else {\n          miao = `${sec}`;\n        }\n        return `${fen}:${miao}`;\n      }\n      // 大于60分钟   格式  _:_:_\n      if (intTime >= 3600) {\n        let hour = parseInt(intTime / 3600);\n        const mins = parseInt((intTime % 3600) / 60);\n        const sec = ((intTime % 3600) % 60) % 60;\n        if (mins < 10) {\n          fen = `0${mins}`;\n        } else {\n          fen = `${mins}`;\n        }\n        if (sec < 10) {\n          miao = `0${sec}`;\n        } else {\n          miao = `${sec}`;\n        }\n        return `${hour}:${fen}:${miao}`;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["ProductVipAddImg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"ProductVipAddImg.vue","sourceRoot":"src/views/product/modules","sourcesContent":["<template>\n  <a-modal\n    title=\"添加视频\"\n    :width=\"600\"\n    :visible=\"visible\"\n    @cancel=\"handleCancel\"\n    @ok=\"handleOk\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n        <a-form-item label=\"视频\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-upload\n            v-if=\"!isVideo\"\n            accept=\"video/*\"\n            :showUploadList=\"false\"\n            :supportServerRender=\"true\"\n            :before-upload=\"beforeUpload\"\n            :customRequest=\"imgCustomRequest\"\n            v-decorator=\"['url', valUrl]\"\n          >\n            <video v-if=\"videoUrl\" id=\"videoPlayer\" controls=\"controls\" width=\"300\" height=\"150\">\n              <source :src=\"videoUrl\" />\n            </video>\n            <a-button v-else>\n              <a-icon type=\"upload\" />点击上传视频\n            </a-button>\n          </a-upload>\n          <a-progress v-if=\"isVideo\" :percent=\"Number(videoPercent)\" status=\"active\" />\n        </a-form-item>\n        <a-form-item label=\"视频第一帧\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-upload\n            accept=\"image/*\"\n            listType=\"picture-card\"\n            class=\"avatar-uploader\"\n            :showUploadList=\"false\"\n            :supportServerRender=\"true\"\n            :customRequest=\"imgCustomRequest\"\n            v-decorator=\"['timeurl', {rules: [{ required: true,message: '请上传视频第一帧' }]} ]\"\n          >\n            <img v-if=\"coverimg\" :src=\"coverimg\" alt=\"avatar\" style=\"max-width: 150px;\" />\n            <div v-else>\n              <a-icon :type=\"loading ? 'loading' : 'plus'\" />\n              <div class=\"ant-upload-text\" v-if=\"!loading\">Upload</div>\n              <div class=\"ant-upload-text\" v-if=\"loading\">{{ percent }}%</div>\n            </div>\n          </a-upload>\n        </a-form-item>\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { httpAction, getAction } from \"@/api/manage\";\nimport * as qiniu from \"qiniu-js\";\nexport default {\n  name: \"ProductVipAddImg\",\n  data() {\n    return {\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 }\n      },\n      headers: {}, // 文件上传的请求头\n      videoUrl: \"\", // 视频地址\n      coverimg: \"\", // 第一帧图片\n      canimg: \"\",\n      percent: \"\", // 图片上传进度\n      videoPercent: 0, // 视频上传进度\n      isVideo: false, // 进度条是否显示\n      loading: false,\n      thisDuration: \"\",\n      valUrl: {\n        rules: [\n          {\n            validator: this.validateVideo\n          }\n        ]\n      },\n      url: {\n        fileUpload: window._CONFIG[\"domianQiNiu\"], // 七牛云地址\n        qiniuToken: \"/qiniuUpToken\"\n      }\n    };\n  },\n  created() {\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = { \"X-Access-Token\": token };\n  },\n  computed: {\n    uploadAction: function() {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    validateVideo(rule, value, callback) {\n      if (!this.videoUrl || this.videoUrl === \"\") {\n        callback(\"请上传时长不超过10分钟的视频\");\n      } else {\n        callback();\n      }\n    },\n    show() {\n      this.visible = true;\n      this.form.resetFields();\n      this.videoUrl = \"\";\n      this.coverimg = \"\";\n      this.confirmLoading = false;\n      this.videoPercent = 0;\n      this.loading = false;\n      this.thisDuration = \"\";\n      this.percent = \"\";\n      this.isVideo = false;\n    },\n    // 关闭、取消\n    handleCancel() {\n      this.visible = false;\n    },\n    handleOk() {\n      const that = this;\n      this.form.validateFields(\n        [\"url\", \"timeurl\"],\n        { force: true },\n        (err, values) => {\n          if (!err) {        \n            let formData = Object.assign(this.model, values);\n            formData.url = this.videoUrl;\n            formData.timeurl = this.coverimg + \"###\" + this.thisDuration;\n            formData.type = \"video\";\n            formData.title = \"\";\n             console.log('formData');\n             console.log(formData)\n            that.$emit(\"ok\", formData);\n\n            this.handleCancel();\n          }\n        }\n      );\n    },\n    // 上传之前的钩子函数\n    beforeUpload(file) {\n      const that = this;\n      let url = URL.createObjectURL(file);\n      var audioElement = new Audio(url);\n      return new Promise((resolve, reject) => {\n        audioElement.addEventListener(\"loadedmetadata\", function() {\n          let playTime = audioElement.duration; //playTime就是当前视频长度\n          if (playTime > 600) {\n            that.$message.warning(\"视频时长不能超过10分钟!\");\n            reject(false);\n          } else {\n            resolve(true);\n          }\n        });\n      });\n    },\n    // 文件自定义上传\n    imgCustomRequest(data) {\n      // 上传文件的类型\n      const fileType = data.file.type;\n      // 上传的图片类型\n      if (fileType.indexOf(\"image\") > -1) {\n        // 开始转圈圈，上传中\n        this.loading = true;\n      } else {\n        //  否则为视频资源\n        this.isVideo = true;\n      }\n      // 获取文件的后缀名\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, \"\");\n      //请求token\n      httpAction(this.url.qiniuToken, {}, \"post\").then(res => {\n        if (res) {\n          let token = res.data.token;\n          const file = data.file;\n          const key = new Date().getTime() + suffix;\n          let domain = this.url.fileUpload;\n          let config = {\n            useCdnDomain: true, // 域名加速\n            region: null // 不指定具体区域，自动识别\n          };\n          let putExtra = {\n            fname: \"\",\n            params: {},\n            mimeType: null\n          };\n          let observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: res => {\n              if (fileType.indexOf(\"image\") > -1) {\n                this.percent = res.total.percent.toFixed(2);\n                this.coverimg = \"\";\n              } else {\n                this.videoPercent = res.total.percent.toFixed(2);\n              }\n            },\n            error: () => {\n              this.$message.error(\"上传失败\");\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                this.loading = false;\n                this.coverimg = this.canimg;\n              } else {\n                //  否则为视频资源\n                this.isVideo = false;\n              }\n            },\n            // success ： 当请求成功时调用的函数。\n            // complete ：当请求成功时，整个请求都已经完成后调用的函数。\n            // 解析 ：一般情况下，用success做请求就可以，但是如果我们用了异步请求，又想按顺序执行代码，那就要用到complete。当然ajax也有同步属性：\n            complete: response => {\n              let allUrl = `${domain}/${response.key}`;\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                this.coverimg = allUrl;\n                this.loading = false;\n              } else {\n                //  否则为视频资源\n                this.isVideo = false;\n                this.videoUrl = allUrl;\n                //  视频资源时需要请求接口获取时长\n                getAction(allUrl + \"?avinfo\").then(res => {\n                  // 时长\n                  let makeDuration = res.format.duration;\n                  this.thisDuration = this.setDuration(makeDuration);\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    setDuration(dur) {\n      // 秒数取整\n      let intTime = parseInt(dur);\n      let fen = \"0\";\n      let miao = \"0\";\n      // 小于10秒， 格式  00:0_\n      if (intTime < 10) {\n        return `00:0${intTime}`;\n      }\n      // 大于10秒小于60秒， 格式   00:_\n      if (intTime < 60) {\n        return `00:${intTime}`;\n      }\n      // 大于1分钟小于60分钟  格式  _:_\n      if (intTime < 3600) {\n        const mins = parseInt(intTime / 60);\n        const sec = intTime % 60;\n        if (mins < 10) {\n          fen = `0${mins}`;\n        } else {\n          fen = `${mins}`;\n        }\n        if (sec < 10) {\n          miao = `0${sec}`;\n        } else {\n          miao = `${sec}`;\n        }\n        return `${fen}:${miao}`;\n      }\n      // 大于60分钟   格式  _:_:_\n      if (intTime >= 3600) {\n        let hour = parseInt(intTime / 3600);\n        const mins = parseInt((intTime % 3600) / 60);\n        const sec = ((intTime % 3600) % 60) % 60;\n        if (mins < 10) {\n          fen = `0${mins}`;\n        } else {\n          fen = `${mins}`;\n        }\n        if (sec < 10) {\n          miao = `0${sec}`;\n        } else {\n          miao = `${sec}`;\n        }\n        return `${hour}:${fen}:${miao}`;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>"]}]}