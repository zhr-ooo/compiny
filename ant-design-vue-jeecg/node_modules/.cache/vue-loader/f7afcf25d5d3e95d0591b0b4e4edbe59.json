{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductAuditMoadl.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductAuditMoadl.vue","mtime":1591672206234},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAction, httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport JCodeEditor from \"@/components/jeecg/JCodeEditor\"\nimport JEditor from \"@/components/jeecg/JEditor\"\nimport AvatarModal from \"@/views/account/settings/AvatarModal\";\nimport * as qiniu from 'qiniu-js'\n\nexport default {\n  name: \"ProductAuditMoadl\",\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 },\n      },\n      labelColc: {\n        xs: { span: 24 },\n        sm: { span: 3 },\n      },\n      wrapperColc: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n      },\n      labelColk: {\n        xs: { span: 24 },\n        sm: { span: 2 },\n      },\n      wrapperColk: {\n        xs: { span: 24 },\n        sm: { span: 21 },\n      },\n      loading: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      coverimg: '',\n      canimg: '',\n      percent: '',\n      refusereason: '',\n      disableSubmit: false,\n      content: '',\n      thisType: null,\n      headers: {},\n      selectList: [],\n      validatorRules:{\n      },\n      url: {\n        getbyId: '/product/productsource/findListByProductId',\n        fileUpload: window._CONFIG['domianQiNiu'],\n        qiniuToken: '/qiniuUpToken'\n      },\n    }\n  },\n  components: {\n    JCodeEditor,\n    JEditor,\n    AvatarModal\n  },\n  computed:{\n    uploadAction:function () {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    add () {\n      this.coverimg = '';\n      this.refusereason = '';\n      this.content = '';\n      this.edit({});\n    },\n    edit (record) {\n      console.log(record)\n      this.coverimg = record.coverimg;\n      this.form.resetFields();\n      this.getNewModel (record.id);\n      if (record.id) {\n        this.thisType = record.type;\n      }\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'id','title','introduction','albumname','nickname','coverimg', 'auditstate','catename', 'type', 'price'))\n      });\n    },\n    // 根据id获取具体数据\n    getNewModel (id) {\n      let html = '';\n      const that = this;\n      getAction(this.url.getbyId,{productId: id, ischeck:1}).then((res) => {\n        if(res.success){\n          let record = res.result;\n          html += '<div style=\"max-height: 350px;overflow-y: scroll;\">';\n          record.forEach(item => {\n            switch (item.type) {\n              case 'img':\n                html += `<p><img src=\"${item.url}\" style=\"width:300px;\" /><br/><span style=\"color: #ccc;\">${item.title}</span></p>`;\n                break;\n              case 'text':\n                html += `<p style=\"text-indent: 2em;\"><h3 style=\"text-align: center;\">${item.title}</h3>${item.url}</p>`;\n                break;\n              case 'video':\n                html += `<p><video controls=\"controls\" width=\"300\" height=\"150\"><source src=\"${item.url}\" /></video></p>`;\n                break;\n              case 'audio':\n                html += `<p><audio src=\"${item.url}\" controls=\"controls\"></audio></p>`;\n                break;\n              default:\n                break\n            }\n          });\n          html += '</div>';\n          this.content = html;\n           console.log('this.content')\n          console.log(this.content)\n        }else{\n          that.$message.warning(res.message);\n        }\n      })\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.coverimg = '';\n      this.disableSubmit = false;\n      this.content = '';\n    },\n    handleCancel () {\n      this.close()\n    },\n    // 自定义上传\n    customRequest (data) {\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, '')\n      //请求token\n      httpAction(this.url.qiniuToken, {}, 'post').then((res) => {\n        if (res) {\n          let token = res.data.token\n          const file = data.file\n          const key = new Date().getTime() + suffix;\n          let domain = this.url.fileUpload\n          let config = {\n            useCdnDomain: true,\n            region: null\n          }\n          let putExtra = {\n            fname: '',\n            params: {},\n            mimeType: null\n          }\n          let observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: (res) => {\n              this.loading = true;\n              this.percent = res.total.percent.toFixed(2)\n              this.coverimg = '';\n            },\n            error: () => {\n              this.$message.error('上传失败')\n              this.loading = false;\n              this.coverimg = this.canimg\n            },\n            complete: (response) => {\n              this.coverimg = `${domain}/${response.key}`;\n              this.loading = false;\n            }\n          })\n        }\n      })\n    },\n\n  }\n}\n",null]}