{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\platform\\modules\\LunboModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\platform\\modules\\LunboModal.vue","mtime":1588673568227},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport { ACCESS_TOKEN } from \"../../../store/mutation-types\";\nimport { httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport * as qiniu from 'qiniu-js'\n\nexport default {\n  name: \"LunboModal\",\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      model: {},\n      headers: {},\n      loading: false,\n      disableSubmit: false,\n      coverimg: '',\n      canimg: '',\n      percent: '',\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules:{\n        color: {\n          rules: [\n            { required: true, message: ' ' },\n            { validator: this.color }\n          ]\n        }\n      },\n      url: {\n        add: \"/system/lunbo/add\",\n        edit: \"/system/lunbo/edit\",\n        fileUpload: window._CONFIG['domianQiNiu'],\n        qiniuToken: '/qiniuUpToken'\n      },\n    }\n  },\n  created () {\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\":token};\n  },\n  computed:{\n    uploadAction:function () {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    color (rule, value, callback) {\n      let reg = /^#[0-9a-fA-F]{6}$/\n      if (!reg.test(value)) {\n        callback('请输入正确的背景颜色色值,如:#333333')\n      }\n      callback()\n    },\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.coverimg = record.image;\n      this.canimg = record.image;\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'position','type','url','image','sorts','bgColor'))\n      });\n\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.coverimg = '';\n      this.canimg = '';\n      this.percent = '';\n      this.disableSubmit = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          formData.image = this.coverimg;\n          \n          console.log(formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n\n\n\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    // 自定义上传\n    customRequest (data) {\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, '')\n      //请求token\n      httpAction(this.url.qiniuToken, {}, 'post').then((res) => {\n        if (res) {\n          let token = res.data.token\n          const file = data.file\n          const key = new Date().getTime() + suffix;\n          let domain = this.url.fileUpload\n          let config = {\n            useCdnDomain: true,\n            region: null\n          }\n          let putExtra = {\n            fname: '',\n            params: {},\n            mimeType: null\n          }\n          let observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: (res) => {\n              this.loading = true;\n              this.percent = res.total.percent.toFixed(2)\n              this.coverimg = '';\n            },\n            error: () => {\n              this.$message.error('上传失败')\n              this.loading = false;\n              this.coverimg = this.canimg\n            },\n            complete: (response) => {\n              this.coverimg = `${domain}/${response.key}`;\n              this.loading = false;\n            }\n          })\n        }\n      })\n    },\n\n  }\n}\n",null]}