{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\modules\\message\\modules\\customModals1.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\modules\\message\\modules\\customModals1.vue","mtime":1592220684623},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putAction, postAction, httpAction } from \"@/api/manage\";\r\nimport pick from \"lodash.pick\";\r\nimport * as qiniu from \"qiniu-js\";\r\nexport default {\r\n  name:'customModals1',\r\n  data() {\r\n    return {\r\n      enable: 0,\r\n      autoSubmit: false,\r\n      visible: false,\r\n      icon: \"\",\r\n      model: {},\r\n      loading: false,\r\n      title: \"新增\",\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 5 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      },\r\n\r\n      confirmLoading: false,\r\n      form: this.$form.createForm(this),\r\n      validatorRules: {},\r\n      url: {\r\n        add: \"/system/que/answer/add\",\r\n        edit: \"/system/que/answer/update\" //修改问题分类\r\n      }\r\n    };\r\n  },\r\n  created() {},\r\n  computed: {\r\n    uploadAction: function() {\r\n      return this.url.fileUpload;\r\n    }\r\n  },\r\n  methods: {\r\n    add() {\r\n      this.icon = \"\";\r\n      this.confirmLoading = false;\r\n      this.edit({});\r\n    },\r\n    edit(record) {\r\n      if (record && record.id && record.id !== \"\" && record.id !== undefined) {\r\n        this.autoSubmit = true;\r\n        console.log(this.autoSubmit);\r\n      } else {\r\n        this.autoSubmit = false;\r\n        console.log(this.autoSubmit);\r\n      }\r\n      this.icon = record.icon;\r\n      this.canimg = record.icon;\r\n      this.form.resetFields();\r\n      this.model = Object.assign({}, record);\r\n      this.parentid = record.parentId == 0 ? record.parentId : undefined;\r\n      this.visible = true;\r\n      if (record.parentId === 0) {\r\n        this.model.parentId = \"\";\r\n      }\r\n      this.$nextTick(() => {\r\n        this.form.setFieldsValue(\r\n          pick(this.model, \"question\", \"answers\", \"type\")\r\n        );\r\n      });\r\n    },\r\n    close() {\r\n      this.$emit(\"close\");\r\n      this.icon = \"\";\r\n      this.visible = false;\r\n    },\r\n    handleOk() {\r\n      const that = this;\r\n      // 触发表单验证\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          that.confirmLoading = true;\r\n          let httpurl = \"\";\r\n          let formData = Object.assign(this.model, values);\r\n\r\n          if (!this.model.id) {\r\n            httpurl += this.url.add;\r\n            // let arr = `?name=${formData.name}&icon=${formData.icon}&phone=${formData.phone}`;\r\n            postAction(httpurl, {\r\n              question: formData.question,\r\n              answers: formData.answers,\r\n              type: formData.type\r\n            })\r\n              .then(res => {\r\n                if (res.success) {\r\n                  that.$message.success(res.message);\r\n                  that.$emit(\"ok\");\r\n                  that.confirmLoading = false;\r\n                  that.close();\r\n                } else {\r\n                  that.$message.warning(res.message);\r\n                  that.confirmLoading = false;\r\n                }\r\n              })\r\n              .finally(() => {});\r\n          } else {\r\n            httpurl += this.url.edit;\r\n            // let arr = `?name=${formData.name}&icon=${formData.icon}&phone=${formData.phone}`;\r\n            putAction(httpurl, {\r\n              question: formData.question,\r\n              answers: formData.answers,\r\n              type: formData.type,\r\n              id: this.model.id\r\n            })\r\n              .then(res => {\r\n                if (res.success) {\r\n                  that.$message.success(res.message);\r\n                  that.$emit(\"ok\");\r\n                } else {\r\n                  that.$message.warning(res.message);\r\n                }\r\n              })\r\n              .finally(() => {\r\n                that.confirmLoading = false;\r\n                that.close();\r\n              });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    handleCancel() {\r\n      this.close();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["customModals1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"customModals1.vue","sourceRoot":"src/views/modules/message/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <a-row :lg=\"8\">\r\n          <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"问题\">\r\n            <a-input\r\n              placeholder=\"请输入问题\"\r\n              v-decorator=\"['question', {rules: [{ required: true,message: '请输入问题' }]}]\"\r\n              :disabled=\"autoSubmit\"\r\n            />\r\n          </a-form-item>\r\n          <!-- :disabled=\"autoSubmit\" -->\r\n        </a-row>\r\n        <a-row :lg=\"8\">\r\n          <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"回答\">\r\n            <a-textarea\r\n              placeholder=\"请输入回答\"\r\n              v-decorator=\"['answers', {rules: [{ required: true,message: '请输入回答' }]}]\"\r\n             :disabled=\"autoSubmit\"\r\n            />\r\n          </a-form-item>\r\n        </a-row>\r\n        <a-row :lg=\"8\">\r\n          <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"问题类型\">\r\n            <a-select\r\n              placeholder=\"请选择问题类型\"            \r\n              v-decorator=\"['type', {rules: [{ required: true,message: '请选择问题类型' }]}]\"\r\n            :disabled=\"autoSubmit\"\r\n            >\r\n              <a-select-option :value=\"1\">充值</a-select-option>\r\n              <a-select-option :value=\"2\">课程</a-select-option>\r\n              <a-select-option :value=\"3\">群聊</a-select-option>\r\n              <a-select-option :value=\"4\">提现</a-select-option>\r\n            </a-select>\r\n          </a-form-item>\r\n        </a-row>\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport { putAction, postAction, httpAction } from \"@/api/manage\";\r\nimport pick from \"lodash.pick\";\r\nimport * as qiniu from \"qiniu-js\";\r\nexport default {\r\n  name:'customModals1',\r\n  data() {\r\n    return {\r\n      enable: 0,\r\n      autoSubmit: false,\r\n      visible: false,\r\n      icon: \"\",\r\n      model: {},\r\n      loading: false,\r\n      title: \"新增\",\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 5 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      },\r\n\r\n      confirmLoading: false,\r\n      form: this.$form.createForm(this),\r\n      validatorRules: {},\r\n      url: {\r\n        add: \"/system/que/answer/add\",\r\n        edit: \"/system/que/answer/update\" //修改问题分类\r\n      }\r\n    };\r\n  },\r\n  created() {},\r\n  computed: {\r\n    uploadAction: function() {\r\n      return this.url.fileUpload;\r\n    }\r\n  },\r\n  methods: {\r\n    add() {\r\n      this.icon = \"\";\r\n      this.confirmLoading = false;\r\n      this.edit({});\r\n    },\r\n    edit(record) {\r\n      if (record && record.id && record.id !== \"\" && record.id !== undefined) {\r\n        this.autoSubmit = true;\r\n        console.log(this.autoSubmit);\r\n      } else {\r\n        this.autoSubmit = false;\r\n        console.log(this.autoSubmit);\r\n      }\r\n      this.icon = record.icon;\r\n      this.canimg = record.icon;\r\n      this.form.resetFields();\r\n      this.model = Object.assign({}, record);\r\n      this.parentid = record.parentId == 0 ? record.parentId : undefined;\r\n      this.visible = true;\r\n      if (record.parentId === 0) {\r\n        this.model.parentId = \"\";\r\n      }\r\n      this.$nextTick(() => {\r\n        this.form.setFieldsValue(\r\n          pick(this.model, \"question\", \"answers\", \"type\")\r\n        );\r\n      });\r\n    },\r\n    close() {\r\n      this.$emit(\"close\");\r\n      this.icon = \"\";\r\n      this.visible = false;\r\n    },\r\n    handleOk() {\r\n      const that = this;\r\n      // 触发表单验证\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          that.confirmLoading = true;\r\n          let httpurl = \"\";\r\n          let formData = Object.assign(this.model, values);\r\n\r\n          if (!this.model.id) {\r\n            httpurl += this.url.add;\r\n            // let arr = `?name=${formData.name}&icon=${formData.icon}&phone=${formData.phone}`;\r\n            postAction(httpurl, {\r\n              question: formData.question,\r\n              answers: formData.answers,\r\n              type: formData.type\r\n            })\r\n              .then(res => {\r\n                if (res.success) {\r\n                  that.$message.success(res.message);\r\n                  that.$emit(\"ok\");\r\n                  that.confirmLoading = false;\r\n                  that.close();\r\n                } else {\r\n                  that.$message.warning(res.message);\r\n                  that.confirmLoading = false;\r\n                }\r\n              })\r\n              .finally(() => {});\r\n          } else {\r\n            httpurl += this.url.edit;\r\n            // let arr = `?name=${formData.name}&icon=${formData.icon}&phone=${formData.phone}`;\r\n            putAction(httpurl, {\r\n              question: formData.question,\r\n              answers: formData.answers,\r\n              type: formData.type,\r\n              id: this.model.id\r\n            })\r\n              .then(res => {\r\n                if (res.success) {\r\n                  that.$message.success(res.message);\r\n                  that.$emit(\"ok\");\r\n                } else {\r\n                  that.$message.warning(res.message);\r\n                }\r\n              })\r\n              .finally(() => {\r\n                that.confirmLoading = false;\r\n                that.close();\r\n              });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    handleCancel() {\r\n      this.close();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"]}]}