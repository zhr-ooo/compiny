{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\components\\jeecg\\JImportModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\components\\jeecg\\JImportModal.vue","mtime":1588673568114},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { postAction } from '@/api/manage'\nexport default {\n  name: 'JImportModal',\n  props:{\n    url:{\n      type: String,\n      default: '',\n      required: false\n    }\n  },\n  data(){\n    return {\n      visible:false,\n      uploading:false,\n      fileList:[],\n      uploadAction:''\n    }\n  },\n  watch: {\n    url (val) {\n      if(val){\n       this.uploadAction = window._CONFIG['domianURL']+val\n      }\n    }\n  },\n  created () {\n    this.uploadAction = window._CONFIG['domianURL']+this.url\n  },\n\n  methods:{\n    handleClose(){\n      this.visible=false\n    },\n    show(){\n      this.fileList = []\n      this.uploading = false\n      this.visible = true\n    },\n    handleRemove(file) {\n      const index = this.fileList.indexOf(file);\n      const newFileList = this.fileList.slice();\n      newFileList.splice(index, 1);\n      this.fileList = newFileList\n    },\n    beforeUpload(file) {\n      this.fileList = [...this.fileList, file]\n      return false;\n    },\n    handleImport() {\n      const { fileList } = this;\n      const formData = new FormData();\n      fileList.forEach((file) => {\n        formData.append('files[]', file);\n      });\n      this.uploading = true\n      postAction(this.uploadAction, formData).then((res) => {\n        this.uploading = false\n        if(res.success){\n          this.$message.success(res.message)\n          this.visible=false\n          this.$emit('ok')\n        }else{\n          this.$message.warning(res.message)\n        }\n      })\n    }\n\n  }\n}\n",null]}