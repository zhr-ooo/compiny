{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductVipAddImg.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductVipAddImg.vue","mtime":1589876280796},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { httpAction, getAction } from \"@/api/manage\";\nimport * as qiniu from \"qiniu-js\";\nexport default {\n  name: \"ProductVipAddImg\",\n  data: function data() {\n    return {\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 17\n        }\n      },\n      headers: {},\n      // 文件上传的请求头\n      videoUrl: \"\",\n      // 视频地址\n      coverimg: \"\",\n      // 第一帧图片\n      canimg: \"\",\n      percent: \"\",\n      // 图片上传进度\n      videoPercent: 0,\n      // 视频上传进度\n      isVideo: false,\n      // 进度条是否显示\n      loading: false,\n      thisDuration: \"\",\n      valUrl: {\n        rules: [{\n          validator: this.validateVideo\n        }]\n      },\n      url: {\n        fileUpload: window._CONFIG[\"domianQiNiu\"],\n        // 七牛云地址\n        qiniuToken: \"/qiniuUpToken\"\n      }\n    };\n  },\n  created: function created() {\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\n      \"X-Access-Token\": token\n    };\n  },\n  computed: {\n    uploadAction: function uploadAction() {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    validateVideo: function validateVideo(rule, value, callback) {\n      if (!this.videoUrl || this.videoUrl === \"\") {\n        callback(\"请上传时长不超过10分钟的视频\");\n      } else {\n        callback();\n      }\n    },\n    show: function show() {\n      this.visible = true;\n      this.form.resetFields();\n      this.videoUrl = \"\";\n      this.coverimg = \"\";\n      this.confirmLoading = false;\n      this.videoPercent = 0;\n      this.loading = false;\n      this.thisDuration = \"\";\n      this.percent = \"\";\n      this.isVideo = false;\n    },\n    // 关闭、取消\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this = this;\n\n      var that = this;\n      this.form.validateFields([\"url\", \"timeurl\"], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          var formData = Object.assign(_this.model, values);\n          formData.url = _this.videoUrl;\n          formData.timeurl = _this.coverimg + \"###\" + _this.thisDuration;\n          formData.type = \"video\";\n          formData.title = \"\";\n          console.log('formData');\n          console.log(formData);\n          that.$emit(\"ok\", formData);\n\n          _this.handleCancel();\n        }\n      });\n    },\n    // 上传之前的钩子函数\n    beforeUpload: function beforeUpload(file) {\n      var that = this;\n      var url = URL.createObjectURL(file);\n      var audioElement = new Audio(url);\n      return new Promise(function (resolve, reject) {\n        audioElement.addEventListener(\"loadedmetadata\", function () {\n          var playTime = audioElement.duration; //playTime就是当前视频长度\n\n          if (playTime > 600) {\n            that.$message.warning(\"视频时长不能超过10分钟!\");\n            reject(false);\n          } else {\n            resolve(true);\n          }\n        });\n      });\n    },\n    // 文件自定义上传\n    imgCustomRequest: function imgCustomRequest(data) {\n      var _this2 = this;\n\n      // 上传文件的类型\n      var fileType = data.file.type; // 上传的图片类型\n\n      if (fileType.indexOf(\"image\") > -1) {\n        // 开始转圈圈，上传中\n        this.loading = true;\n      } else {\n        //  否则为视频资源\n        this.isVideo = true;\n      } // 获取文件的后缀名\n\n\n      var suffix = \".\" + data.file.name.replace(/^.+\\./, \"\"); //请求token\n\n      httpAction(this.url.qiniuToken, {}, \"post\").then(function (res) {\n        if (res) {\n          var token = res.data.token;\n          var file = data.file;\n          var key = new Date().getTime() + suffix;\n          var domain = _this2.url.fileUpload;\n          var config = {\n            useCdnDomain: true,\n            // 域名加速\n            region: null // 不指定具体区域，自动识别\n\n          };\n          var putExtra = {\n            fname: \"\",\n            params: {},\n            mimeType: null\n          };\n          var observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: function next(res) {\n              if (fileType.indexOf(\"image\") > -1) {\n                _this2.percent = res.total.percent.toFixed(2);\n                _this2.coverimg = \"\";\n              } else {\n                _this2.videoPercent = res.total.percent.toFixed(2);\n              }\n            },\n            error: function error() {\n              _this2.$message.error(\"上传失败\");\n\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                _this2.loading = false;\n                _this2.coverimg = _this2.canimg;\n              } else {\n                //  否则为视频资源\n                _this2.isVideo = false;\n              }\n            },\n            // success ： 当请求成功时调用的函数。\n            // complete ：当请求成功时，整个请求都已经完成后调用的函数。\n            // 解析 ：一般情况下，用success做请求就可以，但是如果我们用了异步请求，又想按顺序执行代码，那就要用到complete。当然ajax也有同步属性：\n            complete: function complete(response) {\n              var allUrl = \"\".concat(domain, \"/\").concat(response.key);\n\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                _this2.coverimg = allUrl;\n                _this2.loading = false;\n              } else {\n                //  否则为视频资源\n                _this2.isVideo = false;\n                _this2.videoUrl = allUrl; //  视频资源时需要请求接口获取时长\n\n                getAction(allUrl + \"?avinfo\").then(function (res) {\n                  // 时长\n                  var makeDuration = res.format.duration;\n                  _this2.thisDuration = _this2.setDuration(makeDuration);\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    setDuration: function setDuration(dur) {\n      // 秒数取整\n      var intTime = parseInt(dur);\n      var fen = \"0\";\n      var miao = \"0\"; // 小于10秒， 格式  00:0_\n\n      if (intTime < 10) {\n        return \"00:0\".concat(intTime);\n      } // 大于10秒小于60秒， 格式   00:_\n\n\n      if (intTime < 60) {\n        return \"00:\".concat(intTime);\n      } // 大于1分钟小于60分钟  格式  _:_\n\n\n      if (intTime < 3600) {\n        var mins = parseInt(intTime / 60);\n        var sec = intTime % 60;\n\n        if (mins < 10) {\n          fen = \"0\".concat(mins);\n        } else {\n          fen = \"\".concat(mins);\n        }\n\n        if (sec < 10) {\n          miao = \"0\".concat(sec);\n        } else {\n          miao = \"\".concat(sec);\n        }\n\n        return \"\".concat(fen, \":\").concat(miao);\n      } // 大于60分钟   格式  _:_:_\n\n\n      if (intTime >= 3600) {\n        var hour = parseInt(intTime / 3600);\n\n        var _mins = parseInt(intTime % 3600 / 60);\n\n        var _sec = intTime % 3600 % 60 % 60;\n\n        if (_mins < 10) {\n          fen = \"0\".concat(_mins);\n        } else {\n          fen = \"\".concat(_mins);\n        }\n\n        if (_sec < 10) {\n          miao = \"0\".concat(_sec);\n        } else {\n          miao = \"\".concat(_sec);\n        }\n\n        return \"\".concat(hour, \":\").concat(fen, \":\").concat(miao);\n      }\n    }\n  }\n};",{"version":3,"sources":["ProductVipAddImg.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    title=\"添加视频\"\n    :width=\"600\"\n    :visible=\"visible\"\n    @cancel=\"handleCancel\"\n    @ok=\"handleOk\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n        <a-form-item label=\"视频\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-upload\n            v-if=\"!isVideo\"\n            accept=\"video/*\"\n            :showUploadList=\"false\"\n            :supportServerRender=\"true\"\n            :before-upload=\"beforeUpload\"\n            :customRequest=\"imgCustomRequest\"\n            v-decorator=\"['url', valUrl]\"\n          >\n            <video v-if=\"videoUrl\" id=\"videoPlayer\" controls=\"controls\" width=\"300\" height=\"150\">\n              <source :src=\"videoUrl\" />\n            </video>\n            <a-button v-else>\n              <a-icon type=\"upload\" />点击上传视频\n            </a-button>\n          </a-upload>\n          <a-progress v-if=\"isVideo\" :percent=\"Number(videoPercent)\" status=\"active\" />\n        </a-form-item>\n        <a-form-item label=\"视频第一帧\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-upload\n            accept=\"image/*\"\n            listType=\"picture-card\"\n            class=\"avatar-uploader\"\n            :showUploadList=\"false\"\n            :supportServerRender=\"true\"\n            :customRequest=\"imgCustomRequest\"\n            v-decorator=\"['timeurl', {rules: [{ required: true,message: '请上传视频第一帧' }]} ]\"\n          >\n            <img v-if=\"coverimg\" :src=\"coverimg\" alt=\"avatar\" style=\"max-width: 150px;\" />\n            <div v-else>\n              <a-icon :type=\"loading ? 'loading' : 'plus'\" />\n              <div class=\"ant-upload-text\" v-if=\"!loading\">Upload</div>\n              <div class=\"ant-upload-text\" v-if=\"loading\">{{ percent }}%</div>\n            </div>\n          </a-upload>\n        </a-form-item>\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { httpAction, getAction } from \"@/api/manage\";\nimport * as qiniu from \"qiniu-js\";\nexport default {\n  name: \"ProductVipAddImg\",\n  data() {\n    return {\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 }\n      },\n      headers: {}, // 文件上传的请求头\n      videoUrl: \"\", // 视频地址\n      coverimg: \"\", // 第一帧图片\n      canimg: \"\",\n      percent: \"\", // 图片上传进度\n      videoPercent: 0, // 视频上传进度\n      isVideo: false, // 进度条是否显示\n      loading: false,\n      thisDuration: \"\",\n      valUrl: {\n        rules: [\n          {\n            validator: this.validateVideo\n          }\n        ]\n      },\n      url: {\n        fileUpload: window._CONFIG[\"domianQiNiu\"], // 七牛云地址\n        qiniuToken: \"/qiniuUpToken\"\n      }\n    };\n  },\n  created() {\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = { \"X-Access-Token\": token };\n  },\n  computed: {\n    uploadAction: function() {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    validateVideo(rule, value, callback) {\n      if (!this.videoUrl || this.videoUrl === \"\") {\n        callback(\"请上传时长不超过10分钟的视频\");\n      } else {\n        callback();\n      }\n    },\n    show() {\n      this.visible = true;\n      this.form.resetFields();\n      this.videoUrl = \"\";\n      this.coverimg = \"\";\n      this.confirmLoading = false;\n      this.videoPercent = 0;\n      this.loading = false;\n      this.thisDuration = \"\";\n      this.percent = \"\";\n      this.isVideo = false;\n    },\n    // 关闭、取消\n    handleCancel() {\n      this.visible = false;\n    },\n    handleOk() {\n      const that = this;\n      this.form.validateFields(\n        [\"url\", \"timeurl\"],\n        { force: true },\n        (err, values) => {\n          if (!err) {        \n            let formData = Object.assign(this.model, values);\n            formData.url = this.videoUrl;\n            formData.timeurl = this.coverimg + \"###\" + this.thisDuration;\n            formData.type = \"video\";\n            formData.title = \"\";\n             console.log('formData');\n             console.log(formData)\n            that.$emit(\"ok\", formData);\n\n            this.handleCancel();\n          }\n        }\n      );\n    },\n    // 上传之前的钩子函数\n    beforeUpload(file) {\n      const that = this;\n      let url = URL.createObjectURL(file);\n      var audioElement = new Audio(url);\n      return new Promise((resolve, reject) => {\n        audioElement.addEventListener(\"loadedmetadata\", function() {\n          let playTime = audioElement.duration; //playTime就是当前视频长度\n          if (playTime > 600) {\n            that.$message.warning(\"视频时长不能超过10分钟!\");\n            reject(false);\n          } else {\n            resolve(true);\n          }\n        });\n      });\n    },\n    // 文件自定义上传\n    imgCustomRequest(data) {\n      // 上传文件的类型\n      const fileType = data.file.type;\n      // 上传的图片类型\n      if (fileType.indexOf(\"image\") > -1) {\n        // 开始转圈圈，上传中\n        this.loading = true;\n      } else {\n        //  否则为视频资源\n        this.isVideo = true;\n      }\n      // 获取文件的后缀名\n      const suffix = \".\" + data.file.name.replace(/^.+\\./, \"\");\n      //请求token\n      httpAction(this.url.qiniuToken, {}, \"post\").then(res => {\n        if (res) {\n          let token = res.data.token;\n          const file = data.file;\n          const key = new Date().getTime() + suffix;\n          let domain = this.url.fileUpload;\n          let config = {\n            useCdnDomain: true, // 域名加速\n            region: null // 不指定具体区域，自动识别\n          };\n          let putExtra = {\n            fname: \"\",\n            params: {},\n            mimeType: null\n          };\n          let observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: res => {\n              if (fileType.indexOf(\"image\") > -1) {\n                this.percent = res.total.percent.toFixed(2);\n                this.coverimg = \"\";\n              } else {\n                this.videoPercent = res.total.percent.toFixed(2);\n              }\n            },\n            error: () => {\n              this.$message.error(\"上传失败\");\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                this.loading = false;\n                this.coverimg = this.canimg;\n              } else {\n                //  否则为视频资源\n                this.isVideo = false;\n              }\n            },\n            // success ： 当请求成功时调用的函数。\n            // complete ：当请求成功时，整个请求都已经完成后调用的函数。\n            // 解析 ：一般情况下，用success做请求就可以，但是如果我们用了异步请求，又想按顺序执行代码，那就要用到complete。当然ajax也有同步属性：\n            complete: response => {\n              let allUrl = `${domain}/${response.key}`;\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                this.coverimg = allUrl;\n                this.loading = false;\n              } else {\n                //  否则为视频资源\n                this.isVideo = false;\n                this.videoUrl = allUrl;\n                //  视频资源时需要请求接口获取时长\n                getAction(allUrl + \"?avinfo\").then(res => {\n                  // 时长\n                  let makeDuration = res.format.duration;\n                  this.thisDuration = this.setDuration(makeDuration);\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    setDuration(dur) {\n      // 秒数取整\n      let intTime = parseInt(dur);\n      let fen = \"0\";\n      let miao = \"0\";\n      // 小于10秒， 格式  00:0_\n      if (intTime < 10) {\n        return `00:0${intTime}`;\n      }\n      // 大于10秒小于60秒， 格式   00:_\n      if (intTime < 60) {\n        return `00:${intTime}`;\n      }\n      // 大于1分钟小于60分钟  格式  _:_\n      if (intTime < 3600) {\n        const mins = parseInt(intTime / 60);\n        const sec = intTime % 60;\n        if (mins < 10) {\n          fen = `0${mins}`;\n        } else {\n          fen = `${mins}`;\n        }\n        if (sec < 10) {\n          miao = `0${sec}`;\n        } else {\n          miao = `${sec}`;\n        }\n        return `${fen}:${miao}`;\n      }\n      // 大于60分钟   格式  _:_:_\n      if (intTime >= 3600) {\n        let hour = parseInt(intTime / 3600);\n        const mins = parseInt((intTime % 3600) / 60);\n        const sec = ((intTime % 3600) % 60) % 60;\n        if (mins < 10) {\n          fen = `0${mins}`;\n        } else {\n          fen = `${mins}`;\n        }\n        if (sec < 10) {\n          miao = `0${sec}`;\n        } else {\n          miao = `${sec}`;\n        }\n        return `${hour}:${fen}:${miao}`;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/views/product/modules"}]}