{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\user\\Step2.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\user\\Step2.vue","mtime":1588673568276},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { postAction } from '@/api/manage';\nexport default {\n  name: \"Step2\",\n  props: ['userList'],\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      loading: false,\n      accountName: this.userList.username,\n      phone: this.userList.phone,\n      dropList: \"0\",\n      captcha: \"\",\n      show: true,\n      state: {\n        time: 60,\n        smsSendBtn: false\n      },\n      formLogin: {\n        captcha: \"\",\n        mobile: \"\"\n      },\n      validatorRules: {\n        captcha: {\n          rule: [{\n            required: true,\n            message: '请输入短信验证码!'\n          }, {\n            validator: this.validateCaptcha\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    nextStep: function nextStep() {\n      var _this = this;\n\n      var that = this;\n      that.loading = true;\n      this.form.validateFields(function (err, values) {\n        console.log(values);\n\n        if (!err) {\n          if (that.dropList == \"0\") {\n            if (values.captcha == undefined) {\n              _this.cmsFailed(\"请输入短信验证码!\");\n            } else {\n              var params = {};\n              params.phone = _this.userList.phone;\n              params.smscode = values.captcha;\n              postAction(\"/sys/user/phoneVerification\", params).then(function (res) {\n                if (res.success) {\n                  console.log(res);\n                  var userList = {\n                    username: _this.userList.username,\n                    phone: _this.userList.phone,\n                    smscode: res.result\n                  };\n                  setTimeout(function () {\n                    that.$emit('nextStep', userList);\n                  }, 0);\n                } else {\n                  _this.cmsFailed(res.message);\n                }\n              });\n            }\n          }\n        }\n      });\n    },\n    prevStep: function prevStep() {\n      this.$emit('prevStep', this.userList);\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var that = this;\n      this.state.smsSendBtn = true;\n      var interval = window.setInterval(function () {\n        if (that.state.time-- <= 0) {\n          that.state.time = 60;\n          that.state.smsSendBtn = false;\n          window.clearInterval(interval);\n        }\n      }, 1000);\n      var hide = this.$message.loading('验证码发送中..', 0);\n      var smsParams = {\n        mobile: this.userList.phone,\n        smsmode: \"2\"\n      };\n      postAction(\"/sys/sms\", smsParams).then(function (res) {\n        if (!res.success) {\n          setTimeout(hide, 1);\n\n          _this2.cmsFailed(res.message);\n        }\n\n        setTimeout(hide, 500);\n      });\n    },\n    cmsFailed: function cmsFailed(err) {\n      this.$notification['error']({\n        message: \"验证错误\",\n        description: err,\n        duration: 4\n      });\n    },\n    handleChangeSelect: function handleChangeSelect(value) {\n      var that = this;\n      console.log(value);\n\n      if (value == 0) {\n        that.dropList = \"0\";\n        that.show = true;\n      } else {\n        that.dropList = \"1\";\n        that.show = false;\n      }\n    }\n  }\n};",null]}