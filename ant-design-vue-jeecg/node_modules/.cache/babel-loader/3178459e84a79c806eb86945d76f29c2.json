{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\components\\tools\\DepartSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\components\\tools\\DepartSelect.vue","mtime":1588673568134},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, putAction } from '@/api/manage';\nimport Vue from 'vue';\nimport store from '@/store/';\nimport { USER_INFO } from \"@/store/mutation-types\";\nexport default {\n  name: 'DepartSelect',\n  props: {\n    title: {\n      type: String,\n      default: \"部门选择\",\n      required: false\n    },\n    closable: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    username: {\n      type: String,\n      default: \"\",\n      required: false\n    }\n  },\n  watch: {\n    username: function username(val) {\n      if (val) {\n        this.loadDepartList();\n      }\n    }\n  },\n  data: function data() {\n    return {\n      currTitle: this.title,\n      visible: false,\n      departList: [],\n      departSelected: \"\",\n      validate_status: \"\",\n      currDepartName: \"\"\n    };\n  },\n  created: function created() {//this.loadDepartList()\n  },\n  methods: {\n    loadDepartList: function loadDepartList() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var url = \"/sys/user/getCurrentUserDeparts\";\n        _this.currDepartName = '';\n        getAction(url).then(function (res) {\n          if (res.success) {\n            var departs = res.result.list;\n            var orgCode = res.result.orgCode;\n\n            if (departs && departs.length > 0) {\n              var _iterator = _createForOfIteratorHelper(departs),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var i = _step.value;\n\n                  if (i.orgCode == orgCode) {\n                    _this.currDepartName = i.departName;\n                    break;\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            }\n\n            _this.departSelected = orgCode;\n            _this.departList = departs;\n\n            if (_this.currDepartName) {\n              _this.currTitle = \"部门切换（当前部门 : \" + _this.currDepartName + \"）\";\n            }\n          }\n\n          resolve();\n        });\n      });\n    },\n    close: function close() {\n      this.departClear();\n    },\n    departOk: function departOk() {\n      var _this2 = this;\n\n      if (!this.departSelected) {\n        this.validate_status = 'error';\n        return false;\n      }\n\n      var obj = {\n        orgCode: this.departSelected,\n        username: this.username\n      };\n      putAction(\"/sys/selectDepart\", obj).then(function (res) {\n        if (res.success) {\n          var userInfo = res.result.userInfo;\n          Vue.ls.set(USER_INFO, userInfo, 7 * 24 * 60 * 60 * 1000);\n          store.commit('SET_INFO', userInfo); //console.log(\"---切换组织机构---userInfo-------\",store.getters.userInfo.orgCode);\n\n          _this2.departClear();\n        }\n      });\n    },\n    show: function show() {\n      var _this3 = this;\n\n      //如果组件传值username此处就不用loadDepartList了\n      this.loadDepartList().then(function () {\n        _this3.visible = true;\n\n        if (!_this3.departList || _this3.departList.length <= 0) {\n          _this3.$message.warning(\"您尚未设置部门信息!\");\n\n          _this3.departClear();\n        }\n      });\n    },\n    departClear: function departClear() {\n      this.departList = [];\n      this.departSelected = \"\";\n      this.visible = false;\n      this.validate_status = '';\n      this.currDepartName = \"\";\n    }\n  }\n};",null]}