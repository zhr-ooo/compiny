{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\components\\jeecg\\JEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\components\\jeecg\\JEditor.vue","mtime":1588673568112},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction } from \"@/api/manage\";\nimport tinymce from 'tinymce/tinymce';\nimport Editor from '@tinymce/tinymce-vue';\nimport 'tinymce/themes/silver/theme';\nimport * as qiniu from 'qiniu-js'; // import 'tinymce/plugins/image'\n\nimport '@/utils/plugin';\nimport 'tinymce/plugins/media';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/wordcount';\nimport 'tinymce/plugins/colorpicker';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/fullscreen';\nexport default {\n  components: {\n    Editor: Editor\n  },\n  props: {\n    value: {\n      type: String,\n      required: false\n    },\n    triggerChange: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    plugins: {\n      type: [String, Array],\n      default: 'lists image media table textcolor wordcount contextmenu fullscreen link'\n    },\n    toolbar: {\n      type: [String, Array],\n      default: 'undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists image media table link | removeformat | fullscreen'\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      percent: '',\n      isChuan: false,\n      //初始化配置\n      init: {\n        language_url: '/tinymce/langs/zh_CN.js',\n        language: 'zh_CN',\n        skin_url: '/tinymce/skins/lightgray',\n        height: 300,\n        plugins: this.plugins,\n        toolbar: this.toolbar,\n        branding: false,\n        menubar: false,\n        file_picker_callback: function file_picker_callback(callback, value, meta) {\n          var input = document.createElement('input');\n          input.setAttribute('type', 'file');\n          input.click();\n          var that = _this;\n\n          input.onchange = function () {\n            var files = this.files[0];\n            console.log(files);\n\n            if (meta.filetype == 'media') {\n              if (files.type.indexOf('video') == -1 && files.type.indexOf('audio') == -1) {\n                that.$message.warning('请选择视频或音频');\n                return;\n              }\n            }\n\n            if (files.type.indexOf('video') > -1) {\n              var url = URL.createObjectURL(files);\n              var audioElement = new Audio(url);\n              audioElement.addEventListener('loadedmetadata', function () {\n                var playTime = audioElement.duration; //playTime就是当前视频长度\n\n                if (playTime > 600) {\n                  that.$message.warning('视频时长不能超过10分钟!');\n                  that.isChuan = false;\n                } else {\n                  that.isChuan = true;\n                }\n              });\n            }\n\n            if (meta.filetype == 'image') {\n              if (files.type.indexOf('image') == -1) {\n                that.$message.warning('请选择图片');\n                return;\n              }\n            } // let formData = new FormData();\n\n\n            var suffix = \".\" + files.name.replace(/^.+\\./, ''); // let file = new FormData();\n            // file.append('file', files, files.name);\n\n            if (that.isChuan) {\n              var hide = that.$message.loading('上传中...' + that.percent, 0);\n              httpAction('/qiniuUpToken', {}, 'post').then(function (res) {\n                if (res) {\n                  var token = res.data.token; // let file = new FormData();\n                  // file.append('file', files, files.name);\n\n                  var key = new Date().getTime() + suffix;\n                  var domain = window._CONFIG['domianQiNiu'];\n                  var config = {\n                    useCdnDomain: true,\n                    region: null\n                  };\n                  var putExtra = {\n                    fname: '',\n                    params: {},\n                    mimeType: null\n                  };\n                  var observable = qiniu.upload(files, key, token, putExtra, config);\n                  observable.subscribe({\n                    next: function next(res) {\n                      that.percent = res.total.percent.toFixed(2);\n                    },\n                    error: function error() {\n                      that.$message.error('上传失败');\n                      setTimeout(hide, 500);\n                    },\n                    complete: function complete(response) {\n                      var coverimg = \"\".concat(domain, \"/\").concat(response.key);\n                      setTimeout(hide, 500);\n                      callback(coverimg);\n                    }\n                  });\n                }\n              });\n            } // formData.append('multipartFiles', files, files.name);\n            // httpAction('/fileupload',formData,'post').then((res)=>{\n            //   console.log(res);\n            //   if(res.statusCode == '200') {\n            //     callback(res.data[0]);\n            //   } else {\n            //     callback(files.name);\n            //   }\n            // }).finally(() => {\n            //   // that.close();\n            //   setTimeout(hide, 500)\n            // })\n\n\n            console.log(files);\n          };\n        }\n      },\n      myValue: this.value\n    };\n  },\n  mounted: function mounted() {\n    tinymce.init({});\n  },\n  methods: {\n    onClick: function onClick(e) {\n      this.$emit('onClick', e, tinymce);\n    },\n    //可以添加一些自己的自定义事件，如清空内容\n    clear: function clear() {\n      this.myValue = '';\n    }\n  },\n  watch: {\n    value: function value(newValue) {\n      this.myValue = newValue == null ? '' : newValue;\n    },\n    myValue: function myValue(newValue) {\n      console.log(newValue);\n\n      if (this.triggerChange) {\n        console.log(1);\n        this.$emit('change', newValue);\n      } else {\n        console.log(2);\n        this.$emit('input', newValue);\n      }\n    }\n  }\n};",{"version":3,"sources":["JEditor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"tinymce-editor\">\n    <editor\n      v-model=\"myValue\"\n      :init=\"init\"\n      :disabled=\"disabled\"\n      @onClick=\"onClick\">\n    </editor>\n\n  </div>\n</template>\n\n<script>\n  import { httpAction } from \"@/api/manage\";\n  import tinymce from 'tinymce/tinymce'\n  import Editor from '@tinymce/tinymce-vue'\n  import 'tinymce/themes/silver/theme'\n  import * as qiniu from 'qiniu-js'\n  // import 'tinymce/plugins/image'\n  import '@/utils/plugin';\n  import 'tinymce/plugins/media'\n  import 'tinymce/plugins/table'\n  import 'tinymce/plugins/lists'\n  import 'tinymce/plugins/contextmenu'\n  import 'tinymce/plugins/wordcount'\n  import 'tinymce/plugins/colorpicker'\n  import 'tinymce/plugins/textcolor'\n  import 'tinymce/plugins/fullscreen'\n  export default {\n    components: {\n      Editor\n    },\n    props: {\n      value: {\n        type: String,\n        required:false\n      },\n      triggerChange:{\n        type: Boolean,\n        default: false,\n        required:false\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      plugins: {\n        type: [String, Array],\n        default: 'lists image media table textcolor wordcount contextmenu fullscreen link'\n      },\n      toolbar: {\n        type: [String, Array],\n        default: 'undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists image media table link | removeformat | fullscreen'\n      }\n    },\n    data() {\n      return {\n        percent: '',\n        isChuan: false,\n        //初始化配置\n        init: {\n          language_url: '/tinymce/langs/zh_CN.js',\n          language: 'zh_CN',\n          skin_url: '/tinymce/skins/lightgray',\n          height: 300,\n          plugins: this.plugins,\n          toolbar: this.toolbar,\n          branding: false,\n          menubar: false,\n          file_picker_callback: (callback, value, meta) => {\n            var input = document.createElement('input');\n            input.setAttribute('type', 'file');\n            input.click();\n            let that = this;\n            input.onchange = function() {\n              var files = this.files[0];\n              console.log(files)\n              if (meta.filetype == 'media') {\n                if (files.type.indexOf('video') == -1 && files.type.indexOf('audio') == -1) {\n                  that.$message.warning('请选择视频或音频');\n                  return\n                }\n              }\n              if (files.type.indexOf('video') > -1) {\n                let url = URL.createObjectURL(files)\n                var audioElement = new Audio(url)\n                audioElement.addEventListener('loadedmetadata',function(){\n                  let playTime = audioElement.duration; //playTime就是当前视频长度\n                  if (playTime > 600) {\n                    that.$message.warning('视频时长不能超过10分钟!')\n                    that.isChuan = false;\n                  } else {\n                    that.isChuan = true;\n                  }\n                })\n              }\n              if (meta.filetype == 'image') {\n                if (files.type.indexOf('image') == -1) {\n                  that.$message.warning('请选择图片');\n                  return\n                }\n              }\n              // let formData = new FormData();\n              const suffix = \".\" + files.name.replace(/^.+\\./, '')\n              // let file = new FormData();\n              // file.append('file', files, files.name);\n              if (that.isChuan) {\n                let hide = that.$message.loading('上传中...' + that.percent, 0);\n                httpAction('/qiniuUpToken', {}, 'post').then((res) => {\n                  if (res) {\n                    let token = res.data.token\n                    // let file = new FormData();\n                    // file.append('file', files, files.name);\n                    const key = new Date().getTime() + suffix;\n                    let domain = window._CONFIG['domianQiNiu']\n                    let config = {\n                      useCdnDomain: true,\n                      region: null\n                    }\n                    let putExtra = {\n                      fname: '',\n                      params: {},\n                      mimeType: null\n                    }\n                    let observable = qiniu.upload(files, key, token, putExtra, config);\n                    observable.subscribe({\n                      next: (res) => {\n                        that.percent = res.total.percent.toFixed(2)\n                      },\n                      error: () => {\n                        that.$message.error('上传失败')\n                        setTimeout(hide, 500)\n                      },\n                      complete: (response) => {\n                        const coverimg = `${domain}/${response.key}`;\n                        setTimeout(hide, 500)\n                        callback(coverimg);\n                      }\n                    })\n                  }\n                })\n              }\n\n\n\n              // formData.append('multipartFiles', files, files.name);\n              // httpAction('/fileupload',formData,'post').then((res)=>{\n              //   console.log(res);\n              //   if(res.statusCode == '200') {\n              //     callback(res.data[0]);\n              //   } else {\n              //     callback(files.name);\n              //   }\n              // }).finally(() => {\n              //   // that.close();\n              //   setTimeout(hide, 500)\n              // })\n              console.log(files);\n            };\n          },\n        },\n        myValue: this.value\n      }\n    },\n    mounted() {\n      tinymce.init({})\n    },\n    methods: {\n\n      onClick(e) {\n        this.$emit('onClick', e, tinymce)\n      },\n      //可以添加一些自己的自定义事件，如清空内容\n      clear() {\n        this.myValue = ''\n      }\n    },\n    watch: {\n      value(newValue) {\n        this.myValue = (newValue == null ? '' : newValue)\n      },\n      myValue(newValue) {\n        console.log(newValue)\n        if(this.triggerChange){\n          console.log(1)\n          this.$emit('change', newValue)\n        }else{\n          console.log(2)\n          this.$emit('input', newValue)\n        }\n      }\n    }\n  }\n\n</script>\n<style>\n  .ant-message {\n    z-index: 3000 !important;\n  }\n</style>\n"],"sourceRoot":"src/components/jeecg"}]}