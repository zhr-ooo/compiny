{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductVipAddImg.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductVipAddImg.vue","mtime":1589876280796},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { httpAction, getAction } from \"@/api/manage\";\nimport * as qiniu from \"qiniu-js\";\nexport default {\n  name: \"ProductVipAddImg\",\n  data: function data() {\n    return {\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 17\n        }\n      },\n      headers: {},\n      // 文件上传的请求头\n      videoUrl: \"\",\n      // 视频地址\n      coverimg: \"\",\n      // 第一帧图片\n      canimg: \"\",\n      percent: \"\",\n      // 图片上传进度\n      videoPercent: 0,\n      // 视频上传进度\n      isVideo: false,\n      // 进度条是否显示\n      loading: false,\n      thisDuration: \"\",\n      valUrl: {\n        rules: [{\n          validator: this.validateVideo\n        }]\n      },\n      url: {\n        fileUpload: window._CONFIG[\"domianQiNiu\"],\n        // 七牛云地址\n        qiniuToken: \"/qiniuUpToken\"\n      }\n    };\n  },\n  created: function created() {\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\n      \"X-Access-Token\": token\n    };\n  },\n  computed: {\n    uploadAction: function uploadAction() {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    validateVideo: function validateVideo(rule, value, callback) {\n      if (!this.videoUrl || this.videoUrl === \"\") {\n        callback(\"请上传时长不超过10分钟的视频\");\n      } else {\n        callback();\n      }\n    },\n    show: function show() {\n      this.visible = true;\n      this.form.resetFields();\n      this.videoUrl = \"\";\n      this.coverimg = \"\";\n      this.confirmLoading = false;\n      this.videoPercent = 0;\n      this.loading = false;\n      this.thisDuration = \"\";\n      this.percent = \"\";\n      this.isVideo = false;\n    },\n    // 关闭、取消\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this = this;\n\n      var that = this;\n      this.form.validateFields([\"url\", \"timeurl\"], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          var formData = Object.assign(_this.model, values);\n          formData.url = _this.videoUrl;\n          formData.timeurl = _this.coverimg + \"###\" + _this.thisDuration;\n          formData.type = \"video\";\n          formData.title = \"\";\n          console.log('formData');\n          console.log(formData);\n          that.$emit(\"ok\", formData);\n\n          _this.handleCancel();\n        }\n      });\n    },\n    // 上传之前的钩子函数\n    beforeUpload: function beforeUpload(file) {\n      var that = this;\n      var url = URL.createObjectURL(file);\n      var audioElement = new Audio(url);\n      return new Promise(function (resolve, reject) {\n        audioElement.addEventListener(\"loadedmetadata\", function () {\n          var playTime = audioElement.duration; //playTime就是当前视频长度\n\n          if (playTime > 600) {\n            that.$message.warning(\"视频时长不能超过10分钟!\");\n            reject(false);\n          } else {\n            resolve(true);\n          }\n        });\n      });\n    },\n    // 文件自定义上传\n    imgCustomRequest: function imgCustomRequest(data) {\n      var _this2 = this;\n\n      // 上传文件的类型\n      var fileType = data.file.type; // 上传的图片类型\n\n      if (fileType.indexOf(\"image\") > -1) {\n        // 开始转圈圈，上传中\n        this.loading = true;\n      } else {\n        //  否则为视频资源\n        this.isVideo = true;\n      } // 获取文件的后缀名\n\n\n      var suffix = \".\" + data.file.name.replace(/^.+\\./, \"\"); //请求token\n\n      httpAction(this.url.qiniuToken, {}, \"post\").then(function (res) {\n        if (res) {\n          var token = res.data.token;\n          var file = data.file;\n          var key = new Date().getTime() + suffix;\n          var domain = _this2.url.fileUpload;\n          var config = {\n            useCdnDomain: true,\n            // 域名加速\n            region: null // 不指定具体区域，自动识别\n\n          };\n          var putExtra = {\n            fname: \"\",\n            params: {},\n            mimeType: null\n          };\n          var observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: function next(res) {\n              if (fileType.indexOf(\"image\") > -1) {\n                _this2.percent = res.total.percent.toFixed(2);\n                _this2.coverimg = \"\";\n              } else {\n                _this2.videoPercent = res.total.percent.toFixed(2);\n              }\n            },\n            error: function error() {\n              _this2.$message.error(\"上传失败\");\n\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                _this2.loading = false;\n                _this2.coverimg = _this2.canimg;\n              } else {\n                //  否则为视频资源\n                _this2.isVideo = false;\n              }\n            },\n            // success ： 当请求成功时调用的函数。\n            // complete ：当请求成功时，整个请求都已经完成后调用的函数。\n            // 解析 ：一般情况下，用success做请求就可以，但是如果我们用了异步请求，又想按顺序执行代码，那就要用到complete。当然ajax也有同步属性：\n            complete: function complete(response) {\n              var allUrl = \"\".concat(domain, \"/\").concat(response.key);\n\n              if (fileType.indexOf(\"image\") > -1) {\n                // 开始转圈圈，上传中\n                _this2.coverimg = allUrl;\n                _this2.loading = false;\n              } else {\n                //  否则为视频资源\n                _this2.isVideo = false;\n                _this2.videoUrl = allUrl; //  视频资源时需要请求接口获取时长\n\n                getAction(allUrl + \"?avinfo\").then(function (res) {\n                  // 时长\n                  var makeDuration = res.format.duration;\n                  _this2.thisDuration = _this2.setDuration(makeDuration);\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    setDuration: function setDuration(dur) {\n      // 秒数取整\n      var intTime = parseInt(dur);\n      var fen = \"0\";\n      var miao = \"0\"; // 小于10秒， 格式  00:0_\n\n      if (intTime < 10) {\n        return \"00:0\".concat(intTime);\n      } // 大于10秒小于60秒， 格式   00:_\n\n\n      if (intTime < 60) {\n        return \"00:\".concat(intTime);\n      } // 大于1分钟小于60分钟  格式  _:_\n\n\n      if (intTime < 3600) {\n        var mins = parseInt(intTime / 60);\n        var sec = intTime % 60;\n\n        if (mins < 10) {\n          fen = \"0\".concat(mins);\n        } else {\n          fen = \"\".concat(mins);\n        }\n\n        if (sec < 10) {\n          miao = \"0\".concat(sec);\n        } else {\n          miao = \"\".concat(sec);\n        }\n\n        return \"\".concat(fen, \":\").concat(miao);\n      } // 大于60分钟   格式  _:_:_\n\n\n      if (intTime >= 3600) {\n        var hour = parseInt(intTime / 3600);\n\n        var _mins = parseInt(intTime % 3600 / 60);\n\n        var _sec = intTime % 3600 % 60 % 60;\n\n        if (_mins < 10) {\n          fen = \"0\".concat(_mins);\n        } else {\n          fen = \"\".concat(_mins);\n        }\n\n        if (_sec < 10) {\n          miao = \"0\".concat(_sec);\n        } else {\n          miao = \"\".concat(_sec);\n        }\n\n        return \"\".concat(hour, \":\").concat(fen, \":\").concat(miao);\n      }\n    }\n  }\n};",null]}