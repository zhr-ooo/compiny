{"remainingRequest":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductAddAlbumModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\src\\views\\product\\modules\\ProductAddAlbumModal.vue","mtime":1588673568243},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitweb\\vcloudsapce_web\\ant-design-vue-jeecg\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport { httpAction } from '@/api/manage';\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport * as qiniu from 'qiniu-js';\nexport default {\n  name: \"ProductAddAlbumModal\",\n  data: function data() {\n    return {\n      title: '新增专辑',\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      headers: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 17\n        }\n      },\n      model: {},\n      coverimg: '',\n      canimg: '',\n      percent: '',\n      loading: false,\n      url: {\n        add: '/user/album/add',\n        fileUpload: window._CONFIG['domianQiNiu'],\n        qiniuToken: '/qiniuUpToken'\n      }\n    };\n  },\n  created: function created() {\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\n      \"X-Access-Token\": token\n    };\n  },\n  methods: {\n    add: function add() {\n      this.form.resetFields();\n      this.confirmLoading = false;\n    },\n    handleOK: function handleOK() {\n      var _this = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var formData = Object.assign(_this.model, values);\n          formData.albumimg = _this.coverimg; //时间格式化\n\n          console.log(formData);\n          httpAction(_this.url.add, formData, 'POST').then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.handleCancel();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    // 自定义上传\n    customRequest: function customRequest(data) {\n      var _this2 = this;\n\n      var suffix = \".\" + data.file.name.replace(/^.+\\./, ''); //请求token\n\n      httpAction(this.url.qiniuToken, {}, 'post').then(function (res) {\n        if (res) {\n          var token = res.data.token;\n          var file = data.file;\n          var key = new Date().getTime() + suffix;\n          var domain = _this2.url.fileUpload;\n          var config = {\n            useCdnDomain: true,\n            region: null\n          };\n          var putExtra = {\n            fname: '',\n            params: {},\n            mimeType: null\n          };\n          var observable = qiniu.upload(file, key, token, putExtra, config);\n          observable.subscribe({\n            next: function next(res) {\n              _this2.loading = true;\n              _this2.percent = res.total.percent.toFixed(2);\n              _this2.coverimg = '';\n            },\n            error: function error() {\n              _this2.$message.error('上传失败');\n\n              _this2.loading = false;\n              _this2.coverimg = '';\n            },\n            complete: function complete(response) {\n              _this2.coverimg = \"\".concat(domain, \"/\").concat(response.key);\n              _this2.loading = false;\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["ProductAddAlbumModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirm-loading=\"confirmLoading\"\r\n    @ok=\"handleOK\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"专辑名称\"\r\n        >\r\n          <a-input placeholder=\"请输入专辑名称\" v-decorator=\"['albumname', {rules: [{required: true, message: '请输入专辑名称'}]}]\"></a-input>\r\n        </a-form-item>\r\n      </a-form>\r\n      <a-form :form=\"form\">\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"专辑封面\"\r\n        >\r\n          <a-upload\r\n            listType=\"picture-card\"\r\n            class=\"avatar-uploader\"\r\n            :showUploadList=\"false\"\r\n            :supportServerRender=\"true\"\r\n            :customRequest=\"customRequest\"\r\n            v-decorator=\"['albumimg', {}]\"\r\n          >\r\n            <img v-if=\"coverimg\" :src=\"coverimg\" alt=\"avatar\" style=\"max-width: 150px;\" />\r\n            <div v-else>\r\n              <a-icon :type=\"loading ? 'loading' : 'plus'\" />\r\n              <div class=\"ant-upload-text\" v-if=\"!loading\">Upload</div>\r\n              <div class=\"ant-upload-text\" v-if=\"loading\">{{ percent }}%</div>\r\n            </div>\r\n          </a-upload>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import Vue from 'vue'\r\n  import { httpAction } from '@/api/manage'\r\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\r\n  import * as qiniu from 'qiniu-js'\r\n  export default {\r\n    name: \"ProductAddAlbumModal\",\r\n    data () {\r\n      return {\r\n        title: '新增专辑',\r\n        visible: false,\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        headers: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 17 },\r\n        },\r\n        model: {},\r\n        coverimg: '',\r\n        canimg: '',\r\n        percent: '',\r\n        loading: false,\r\n        url: {\r\n          add: '/user/album/add',\r\n          fileUpload: window._CONFIG['domianQiNiu'],\r\n          qiniuToken: '/qiniuUpToken'\r\n        }\r\n      }\r\n    },\r\n    created () {\r\n      const token = Vue.ls.get(ACCESS_TOKEN);\r\n      this.headers = {\"X-Access-Token\":token};\r\n    },\r\n    methods: {\r\n      add () {\r\n        this.form.resetFields()\r\n        this.confirmLoading = false\r\n      },\r\n      handleOK () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let formData = Object.assign(this.model, values);\r\n            formData.albumimg = this.coverimg;\r\n            //时间格式化\r\n\r\n            console.log(formData)\r\n            httpAction(this.url.add,formData,'POST').then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.handleCancel();\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      // 自定义上传\r\n      customRequest (data) {\r\n        const suffix = \".\" + data.file.name.replace(/^.+\\./, '')\r\n        //请求token\r\n        httpAction(this.url.qiniuToken, {}, 'post').then((res) => {\r\n          if (res) {\r\n            let token = res.data.token\r\n            const file = data.file\r\n            const key = new Date().getTime() + suffix;\r\n            let domain = this.url.fileUpload\r\n            let config = {\r\n              useCdnDomain: true,\r\n              region: null\r\n            }\r\n            let putExtra = {\r\n              fname: '',\r\n              params: {},\r\n              mimeType: null\r\n            }\r\n            let observable = qiniu.upload(file, key, token, putExtra, config);\r\n            observable.subscribe({\r\n              next: (res) => {\r\n                this.loading = true;\r\n                this.percent = res.total.percent.toFixed(2)\r\n                this.coverimg = '';\r\n              },\r\n              error: () => {\r\n                this.$message.error('上传失败')\r\n                this.loading = false;\r\n                this.coverimg = ''\r\n              },\r\n              complete: (response) => {\r\n                this.coverimg = `${domain}/${response.key}`;\r\n                this.loading = false;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/product/modules"}]}